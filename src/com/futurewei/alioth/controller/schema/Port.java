// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: port.proto

package com.futurewei.alioth.controller.schema;

public final class Port {
  private Port() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PortConfigurationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:aliothcontroller.PortConfiguration)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 version = 1;</code>
     */
    int getVersion();

    /**
     * <code>optional string project_id = 2;</code>
     */
    java.lang.String getProjectId();
    /**
     * <code>optional string project_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getProjectIdBytes();

    /**
     * <code>optional string network_id = 3;</code>
     */
    java.lang.String getNetworkId();
    /**
     * <code>optional string network_id = 3;</code>
     */
    com.google.protobuf.ByteString
        getNetworkIdBytes();

    /**
     * <code>optional string id = 4;</code>
     */
    java.lang.String getId();
    /**
     * <code>optional string id = 4;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>optional string name = 5;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 5;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional bool admin_state_up = 6;</code>
     */
    boolean getAdminStateUp();

    /**
     * <code>optional string mac_address = 7;</code>
     */
    java.lang.String getMacAddress();
    /**
     * <code>optional string mac_address = 7;</code>
     */
    com.google.protobuf.ByteString
        getMacAddressBytes();

    /**
     * <code>optional string veth_name = 8;</code>
     */
    java.lang.String getVethName();
    /**
     * <code>optional string veth_name = 8;</code>
     */
    com.google.protobuf.ByteString
        getVethNameBytes();

    /**
     * <code>optional .aliothcontroller.PortConfiguration.HostInfo host_info = 9;</code>
     */
    boolean hasHostInfo();
    /**
     * <code>optional .aliothcontroller.PortConfiguration.HostInfo host_info = 9;</code>
     */
    com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo getHostInfo();
    /**
     * <code>optional .aliothcontroller.PortConfiguration.HostInfo host_info = 9;</code>
     */
    com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfoOrBuilder getHostInfoOrBuilder();

    /**
     * <code>repeated .aliothcontroller.PortConfiguration.FixedIp fixed_ips = 10;</code>
     */
    java.util.List<com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp> 
        getFixedIpsList();
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.FixedIp fixed_ips = 10;</code>
     */
    com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp getFixedIps(int index);
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.FixedIp fixed_ips = 10;</code>
     */
    int getFixedIpsCount();
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.FixedIp fixed_ips = 10;</code>
     */
    java.util.List<? extends com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIpOrBuilder> 
        getFixedIpsOrBuilderList();
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.FixedIp fixed_ips = 10;</code>
     */
    com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIpOrBuilder getFixedIpsOrBuilder(
        int index);

    /**
     * <code>repeated .aliothcontroller.PortConfiguration.SecurityGroupId security_group_ids = 11;</code>
     */
    java.util.List<com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId> 
        getSecurityGroupIdsList();
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.SecurityGroupId security_group_ids = 11;</code>
     */
    com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId getSecurityGroupIds(int index);
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.SecurityGroupId security_group_ids = 11;</code>
     */
    int getSecurityGroupIdsCount();
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.SecurityGroupId security_group_ids = 11;</code>
     */
    java.util.List<? extends com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupIdOrBuilder> 
        getSecurityGroupIdsOrBuilderList();
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.SecurityGroupId security_group_ids = 11;</code>
     */
    com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupIdOrBuilder getSecurityGroupIdsOrBuilder(
        int index);

    /**
     * <code>repeated .aliothcontroller.PortConfiguration.AllowAddressPair allow_address_pairs = 12;</code>
     */
    java.util.List<com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair> 
        getAllowAddressPairsList();
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.AllowAddressPair allow_address_pairs = 12;</code>
     */
    com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair getAllowAddressPairs(int index);
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.AllowAddressPair allow_address_pairs = 12;</code>
     */
    int getAllowAddressPairsCount();
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.AllowAddressPair allow_address_pairs = 12;</code>
     */
    java.util.List<? extends com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPairOrBuilder> 
        getAllowAddressPairsOrBuilderList();
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.AllowAddressPair allow_address_pairs = 12;</code>
     */
    com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPairOrBuilder getAllowAddressPairsOrBuilder(
        int index);

    /**
     * <code>repeated .aliothcontroller.PortConfiguration.ExtraDhcpOption extra_dhcp_options = 13;</code>
     */
    java.util.List<com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption> 
        getExtraDhcpOptionsList();
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.ExtraDhcpOption extra_dhcp_options = 13;</code>
     */
    com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption getExtraDhcpOptions(int index);
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.ExtraDhcpOption extra_dhcp_options = 13;</code>
     */
    int getExtraDhcpOptionsCount();
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.ExtraDhcpOption extra_dhcp_options = 13;</code>
     */
    java.util.List<? extends com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOptionOrBuilder> 
        getExtraDhcpOptionsOrBuilderList();
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.ExtraDhcpOption extra_dhcp_options = 13;</code>
     */
    com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOptionOrBuilder getExtraDhcpOptionsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code aliothcontroller.PortConfiguration}
   */
  public  static final class PortConfiguration extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:aliothcontroller.PortConfiguration)
      PortConfigurationOrBuilder {
    // Use PortConfiguration.newBuilder() to construct.
    private PortConfiguration(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PortConfiguration() {
      version_ = 0;
      projectId_ = "";
      networkId_ = "";
      id_ = "";
      name_ = "";
      adminStateUp_ = false;
      macAddress_ = "";
      vethName_ = "";
      fixedIps_ = java.util.Collections.emptyList();
      securityGroupIds_ = java.util.Collections.emptyList();
      allowAddressPairs_ = java.util.Collections.emptyList();
      extraDhcpOptions_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PortConfiguration(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              version_ = input.readInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              projectId_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              networkId_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 48: {

              adminStateUp_ = input.readBool();
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              macAddress_ = s;
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              vethName_ = s;
              break;
            }
            case 74: {
              com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo.Builder subBuilder = null;
              if (hostInfo_ != null) {
                subBuilder = hostInfo_.toBuilder();
              }
              hostInfo_ = input.readMessage(com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(hostInfo_);
                hostInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                fixedIps_ = new java.util.ArrayList<com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp>();
                mutable_bitField0_ |= 0x00000200;
              }
              fixedIps_.add(
                  input.readMessage(com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp.parser(), extensionRegistry));
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                securityGroupIds_ = new java.util.ArrayList<com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId>();
                mutable_bitField0_ |= 0x00000400;
              }
              securityGroupIds_.add(
                  input.readMessage(com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId.parser(), extensionRegistry));
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                allowAddressPairs_ = new java.util.ArrayList<com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair>();
                mutable_bitField0_ |= 0x00000800;
              }
              allowAddressPairs_.add(
                  input.readMessage(com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair.parser(), extensionRegistry));
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                extraDhcpOptions_ = new java.util.ArrayList<com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption>();
                mutable_bitField0_ |= 0x00001000;
              }
              extraDhcpOptions_.add(
                  input.readMessage(com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          fixedIps_ = java.util.Collections.unmodifiableList(fixedIps_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          securityGroupIds_ = java.util.Collections.unmodifiableList(securityGroupIds_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          allowAddressPairs_ = java.util.Collections.unmodifiableList(allowAddressPairs_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          extraDhcpOptions_ = java.util.Collections.unmodifiableList(extraDhcpOptions_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortConfiguration_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortConfiguration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futurewei.alioth.controller.schema.Port.PortConfiguration.class, com.futurewei.alioth.controller.schema.Port.PortConfiguration.Builder.class);
    }

    public interface HostInfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:aliothcontroller.PortConfiguration.HostInfo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string ip_address = 1;</code>
       */
      java.lang.String getIpAddress();
      /**
       * <code>optional string ip_address = 1;</code>
       */
      com.google.protobuf.ByteString
          getIpAddressBytes();

      /**
       * <code>optional string mac_address = 2;</code>
       */
      java.lang.String getMacAddress();
      /**
       * <code>optional string mac_address = 2;</code>
       */
      com.google.protobuf.ByteString
          getMacAddressBytes();
    }
    /**
     * Protobuf type {@code aliothcontroller.PortConfiguration.HostInfo}
     */
    public  static final class HostInfo extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:aliothcontroller.PortConfiguration.HostInfo)
        HostInfoOrBuilder {
      // Use HostInfo.newBuilder() to construct.
      private HostInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private HostInfo() {
        ipAddress_ = "";
        macAddress_ = "";
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private HostInfo(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                ipAddress_ = s;
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();

                macAddress_ = s;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortConfiguration_HostInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortConfiguration_HostInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo.class, com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo.Builder.class);
      }

      public static final int IP_ADDRESS_FIELD_NUMBER = 1;
      private volatile java.lang.Object ipAddress_;
      /**
       * <code>optional string ip_address = 1;</code>
       */
      public java.lang.String getIpAddress() {
        java.lang.Object ref = ipAddress_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          ipAddress_ = s;
          return s;
        }
      }
      /**
       * <code>optional string ip_address = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIpAddressBytes() {
        java.lang.Object ref = ipAddress_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ipAddress_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int MAC_ADDRESS_FIELD_NUMBER = 2;
      private volatile java.lang.Object macAddress_;
      /**
       * <code>optional string mac_address = 2;</code>
       */
      public java.lang.String getMacAddress() {
        java.lang.Object ref = macAddress_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          macAddress_ = s;
          return s;
        }
      }
      /**
       * <code>optional string mac_address = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMacAddressBytes() {
        java.lang.Object ref = macAddress_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          macAddress_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getIpAddressBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, ipAddress_);
        }
        if (!getMacAddressBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, macAddress_);
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getIpAddressBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, ipAddress_);
        }
        if (!getMacAddressBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, macAddress_);
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo)) {
          return super.equals(obj);
        }
        com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo other = (com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo) obj;

        boolean result = true;
        result = result && getIpAddress()
            .equals(other.getIpAddress());
        result = result && getMacAddress()
            .equals(other.getMacAddress());
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        hash = (37 * hash) + IP_ADDRESS_FIELD_NUMBER;
        hash = (53 * hash) + getIpAddress().hashCode();
        hash = (37 * hash) + MAC_ADDRESS_FIELD_NUMBER;
        hash = (53 * hash) + getMacAddress().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code aliothcontroller.PortConfiguration.HostInfo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:aliothcontroller.PortConfiguration.HostInfo)
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortConfiguration_HostInfo_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortConfiguration_HostInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo.class, com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo.Builder.class);
        }

        // Construct using com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          ipAddress_ = "";

          macAddress_ = "";

          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortConfiguration_HostInfo_descriptor;
        }

        public com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo getDefaultInstanceForType() {
          return com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo.getDefaultInstance();
        }

        public com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo build() {
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo buildPartial() {
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo result = new com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo(this);
          result.ipAddress_ = ipAddress_;
          result.macAddress_ = macAddress_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo) {
            return mergeFrom((com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo other) {
          if (other == com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo.getDefaultInstance()) return this;
          if (!other.getIpAddress().isEmpty()) {
            ipAddress_ = other.ipAddress_;
            onChanged();
          }
          if (!other.getMacAddress().isEmpty()) {
            macAddress_ = other.macAddress_;
            onChanged();
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object ipAddress_ = "";
        /**
         * <code>optional string ip_address = 1;</code>
         */
        public java.lang.String getIpAddress() {
          java.lang.Object ref = ipAddress_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            ipAddress_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string ip_address = 1;</code>
         */
        public com.google.protobuf.ByteString
            getIpAddressBytes() {
          java.lang.Object ref = ipAddress_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            ipAddress_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string ip_address = 1;</code>
         */
        public Builder setIpAddress(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          ipAddress_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string ip_address = 1;</code>
         */
        public Builder clearIpAddress() {
          
          ipAddress_ = getDefaultInstance().getIpAddress();
          onChanged();
          return this;
        }
        /**
         * <code>optional string ip_address = 1;</code>
         */
        public Builder setIpAddressBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          ipAddress_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object macAddress_ = "";
        /**
         * <code>optional string mac_address = 2;</code>
         */
        public java.lang.String getMacAddress() {
          java.lang.Object ref = macAddress_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            macAddress_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string mac_address = 2;</code>
         */
        public com.google.protobuf.ByteString
            getMacAddressBytes() {
          java.lang.Object ref = macAddress_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            macAddress_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string mac_address = 2;</code>
         */
        public Builder setMacAddress(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          macAddress_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string mac_address = 2;</code>
         */
        public Builder clearMacAddress() {
          
          macAddress_ = getDefaultInstance().getMacAddress();
          onChanged();
          return this;
        }
        /**
         * <code>optional string mac_address = 2;</code>
         */
        public Builder setMacAddressBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          macAddress_ = value;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:aliothcontroller.PortConfiguration.HostInfo)
      }

      // @@protoc_insertion_point(class_scope:aliothcontroller.PortConfiguration.HostInfo)
      private static final com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo();
      }

      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<HostInfo>
          PARSER = new com.google.protobuf.AbstractParser<HostInfo>() {
        public HostInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new HostInfo(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<HostInfo> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<HostInfo> getParserForType() {
        return PARSER;
      }

      public com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface FixedIpOrBuilder extends
        // @@protoc_insertion_point(interface_extends:aliothcontroller.PortConfiguration.FixedIp)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string subnet_id = 1;</code>
       */
      java.lang.String getSubnetId();
      /**
       * <code>optional string subnet_id = 1;</code>
       */
      com.google.protobuf.ByteString
          getSubnetIdBytes();

      /**
       * <code>optional string ip_address = 2;</code>
       */
      java.lang.String getIpAddress();
      /**
       * <code>optional string ip_address = 2;</code>
       */
      com.google.protobuf.ByteString
          getIpAddressBytes();
    }
    /**
     * Protobuf type {@code aliothcontroller.PortConfiguration.FixedIp}
     */
    public  static final class FixedIp extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:aliothcontroller.PortConfiguration.FixedIp)
        FixedIpOrBuilder {
      // Use FixedIp.newBuilder() to construct.
      private FixedIp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private FixedIp() {
        subnetId_ = "";
        ipAddress_ = "";
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private FixedIp(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                subnetId_ = s;
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();

                ipAddress_ = s;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortConfiguration_FixedIp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortConfiguration_FixedIp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp.class, com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp.Builder.class);
      }

      public static final int SUBNET_ID_FIELD_NUMBER = 1;
      private volatile java.lang.Object subnetId_;
      /**
       * <code>optional string subnet_id = 1;</code>
       */
      public java.lang.String getSubnetId() {
        java.lang.Object ref = subnetId_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          subnetId_ = s;
          return s;
        }
      }
      /**
       * <code>optional string subnet_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSubnetIdBytes() {
        java.lang.Object ref = subnetId_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          subnetId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int IP_ADDRESS_FIELD_NUMBER = 2;
      private volatile java.lang.Object ipAddress_;
      /**
       * <code>optional string ip_address = 2;</code>
       */
      public java.lang.String getIpAddress() {
        java.lang.Object ref = ipAddress_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          ipAddress_ = s;
          return s;
        }
      }
      /**
       * <code>optional string ip_address = 2;</code>
       */
      public com.google.protobuf.ByteString
          getIpAddressBytes() {
        java.lang.Object ref = ipAddress_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ipAddress_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getSubnetIdBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, subnetId_);
        }
        if (!getIpAddressBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, ipAddress_);
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getSubnetIdBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, subnetId_);
        }
        if (!getIpAddressBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, ipAddress_);
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp)) {
          return super.equals(obj);
        }
        com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp other = (com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp) obj;

        boolean result = true;
        result = result && getSubnetId()
            .equals(other.getSubnetId());
        result = result && getIpAddress()
            .equals(other.getIpAddress());
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        hash = (37 * hash) + SUBNET_ID_FIELD_NUMBER;
        hash = (53 * hash) + getSubnetId().hashCode();
        hash = (37 * hash) + IP_ADDRESS_FIELD_NUMBER;
        hash = (53 * hash) + getIpAddress().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code aliothcontroller.PortConfiguration.FixedIp}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:aliothcontroller.PortConfiguration.FixedIp)
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIpOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortConfiguration_FixedIp_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortConfiguration_FixedIp_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp.class, com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp.Builder.class);
        }

        // Construct using com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          subnetId_ = "";

          ipAddress_ = "";

          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortConfiguration_FixedIp_descriptor;
        }

        public com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp getDefaultInstanceForType() {
          return com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp.getDefaultInstance();
        }

        public com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp build() {
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp buildPartial() {
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp result = new com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp(this);
          result.subnetId_ = subnetId_;
          result.ipAddress_ = ipAddress_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp) {
            return mergeFrom((com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp other) {
          if (other == com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp.getDefaultInstance()) return this;
          if (!other.getSubnetId().isEmpty()) {
            subnetId_ = other.subnetId_;
            onChanged();
          }
          if (!other.getIpAddress().isEmpty()) {
            ipAddress_ = other.ipAddress_;
            onChanged();
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object subnetId_ = "";
        /**
         * <code>optional string subnet_id = 1;</code>
         */
        public java.lang.String getSubnetId() {
          java.lang.Object ref = subnetId_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            subnetId_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string subnet_id = 1;</code>
         */
        public com.google.protobuf.ByteString
            getSubnetIdBytes() {
          java.lang.Object ref = subnetId_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            subnetId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string subnet_id = 1;</code>
         */
        public Builder setSubnetId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          subnetId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string subnet_id = 1;</code>
         */
        public Builder clearSubnetId() {
          
          subnetId_ = getDefaultInstance().getSubnetId();
          onChanged();
          return this;
        }
        /**
         * <code>optional string subnet_id = 1;</code>
         */
        public Builder setSubnetIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          subnetId_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object ipAddress_ = "";
        /**
         * <code>optional string ip_address = 2;</code>
         */
        public java.lang.String getIpAddress() {
          java.lang.Object ref = ipAddress_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            ipAddress_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string ip_address = 2;</code>
         */
        public com.google.protobuf.ByteString
            getIpAddressBytes() {
          java.lang.Object ref = ipAddress_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            ipAddress_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string ip_address = 2;</code>
         */
        public Builder setIpAddress(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          ipAddress_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string ip_address = 2;</code>
         */
        public Builder clearIpAddress() {
          
          ipAddress_ = getDefaultInstance().getIpAddress();
          onChanged();
          return this;
        }
        /**
         * <code>optional string ip_address = 2;</code>
         */
        public Builder setIpAddressBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          ipAddress_ = value;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:aliothcontroller.PortConfiguration.FixedIp)
      }

      // @@protoc_insertion_point(class_scope:aliothcontroller.PortConfiguration.FixedIp)
      private static final com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp();
      }

      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<FixedIp>
          PARSER = new com.google.protobuf.AbstractParser<FixedIp>() {
        public FixedIp parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new FixedIp(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<FixedIp> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<FixedIp> getParserForType() {
        return PARSER;
      }

      public com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface SecurityGroupIdOrBuilder extends
        // @@protoc_insertion_point(interface_extends:aliothcontroller.PortConfiguration.SecurityGroupId)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string id = 1;</code>
       */
      java.lang.String getId();
      /**
       * <code>optional string id = 1;</code>
       */
      com.google.protobuf.ByteString
          getIdBytes();
    }
    /**
     * Protobuf type {@code aliothcontroller.PortConfiguration.SecurityGroupId}
     */
    public  static final class SecurityGroupId extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:aliothcontroller.PortConfiguration.SecurityGroupId)
        SecurityGroupIdOrBuilder {
      // Use SecurityGroupId.newBuilder() to construct.
      private SecurityGroupId(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private SecurityGroupId() {
        id_ = "";
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private SecurityGroupId(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                id_ = s;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortConfiguration_SecurityGroupId_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortConfiguration_SecurityGroupId_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId.class, com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId.Builder.class);
      }

      public static final int ID_FIELD_NUMBER = 1;
      private volatile java.lang.Object id_;
      /**
       * <code>optional string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getIdBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getIdBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId)) {
          return super.equals(obj);
        }
        com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId other = (com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId) obj;

        boolean result = true;
        result = result && getId()
            .equals(other.getId());
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code aliothcontroller.PortConfiguration.SecurityGroupId}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:aliothcontroller.PortConfiguration.SecurityGroupId)
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupIdOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortConfiguration_SecurityGroupId_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortConfiguration_SecurityGroupId_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId.class, com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId.Builder.class);
        }

        // Construct using com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          id_ = "";

          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortConfiguration_SecurityGroupId_descriptor;
        }

        public com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId getDefaultInstanceForType() {
          return com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId.getDefaultInstance();
        }

        public com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId build() {
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId buildPartial() {
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId result = new com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId(this);
          result.id_ = id_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId) {
            return mergeFrom((com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId other) {
          if (other == com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId.getDefaultInstance()) return this;
          if (!other.getId().isEmpty()) {
            id_ = other.id_;
            onChanged();
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object id_ = "";
        /**
         * <code>optional string id = 1;</code>
         */
        public java.lang.String getId() {
          java.lang.Object ref = id_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            id_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string id = 1;</code>
         */
        public com.google.protobuf.ByteString
            getIdBytes() {
          java.lang.Object ref = id_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            id_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string id = 1;</code>
         */
        public Builder setId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string id = 1;</code>
         */
        public Builder clearId() {
          
          id_ = getDefaultInstance().getId();
          onChanged();
          return this;
        }
        /**
         * <code>optional string id = 1;</code>
         */
        public Builder setIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          id_ = value;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:aliothcontroller.PortConfiguration.SecurityGroupId)
      }

      // @@protoc_insertion_point(class_scope:aliothcontroller.PortConfiguration.SecurityGroupId)
      private static final com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId();
      }

      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<SecurityGroupId>
          PARSER = new com.google.protobuf.AbstractParser<SecurityGroupId>() {
        public SecurityGroupId parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new SecurityGroupId(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<SecurityGroupId> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<SecurityGroupId> getParserForType() {
        return PARSER;
      }

      public com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface AllowAddressPairOrBuilder extends
        // @@protoc_insertion_point(interface_extends:aliothcontroller.PortConfiguration.AllowAddressPair)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string ip_address = 1;</code>
       */
      java.lang.String getIpAddress();
      /**
       * <code>optional string ip_address = 1;</code>
       */
      com.google.protobuf.ByteString
          getIpAddressBytes();

      /**
       * <code>optional string mac_address = 2;</code>
       */
      java.lang.String getMacAddress();
      /**
       * <code>optional string mac_address = 2;</code>
       */
      com.google.protobuf.ByteString
          getMacAddressBytes();
    }
    /**
     * Protobuf type {@code aliothcontroller.PortConfiguration.AllowAddressPair}
     */
    public  static final class AllowAddressPair extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:aliothcontroller.PortConfiguration.AllowAddressPair)
        AllowAddressPairOrBuilder {
      // Use AllowAddressPair.newBuilder() to construct.
      private AllowAddressPair(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private AllowAddressPair() {
        ipAddress_ = "";
        macAddress_ = "";
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private AllowAddressPair(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                ipAddress_ = s;
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();

                macAddress_ = s;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortConfiguration_AllowAddressPair_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortConfiguration_AllowAddressPair_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair.class, com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair.Builder.class);
      }

      public static final int IP_ADDRESS_FIELD_NUMBER = 1;
      private volatile java.lang.Object ipAddress_;
      /**
       * <code>optional string ip_address = 1;</code>
       */
      public java.lang.String getIpAddress() {
        java.lang.Object ref = ipAddress_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          ipAddress_ = s;
          return s;
        }
      }
      /**
       * <code>optional string ip_address = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIpAddressBytes() {
        java.lang.Object ref = ipAddress_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ipAddress_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int MAC_ADDRESS_FIELD_NUMBER = 2;
      private volatile java.lang.Object macAddress_;
      /**
       * <code>optional string mac_address = 2;</code>
       */
      public java.lang.String getMacAddress() {
        java.lang.Object ref = macAddress_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          macAddress_ = s;
          return s;
        }
      }
      /**
       * <code>optional string mac_address = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMacAddressBytes() {
        java.lang.Object ref = macAddress_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          macAddress_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getIpAddressBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, ipAddress_);
        }
        if (!getMacAddressBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, macAddress_);
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getIpAddressBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, ipAddress_);
        }
        if (!getMacAddressBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, macAddress_);
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair)) {
          return super.equals(obj);
        }
        com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair other = (com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair) obj;

        boolean result = true;
        result = result && getIpAddress()
            .equals(other.getIpAddress());
        result = result && getMacAddress()
            .equals(other.getMacAddress());
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        hash = (37 * hash) + IP_ADDRESS_FIELD_NUMBER;
        hash = (53 * hash) + getIpAddress().hashCode();
        hash = (37 * hash) + MAC_ADDRESS_FIELD_NUMBER;
        hash = (53 * hash) + getMacAddress().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code aliothcontroller.PortConfiguration.AllowAddressPair}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:aliothcontroller.PortConfiguration.AllowAddressPair)
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPairOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortConfiguration_AllowAddressPair_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortConfiguration_AllowAddressPair_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair.class, com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair.Builder.class);
        }

        // Construct using com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          ipAddress_ = "";

          macAddress_ = "";

          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortConfiguration_AllowAddressPair_descriptor;
        }

        public com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair getDefaultInstanceForType() {
          return com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair.getDefaultInstance();
        }

        public com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair build() {
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair buildPartial() {
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair result = new com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair(this);
          result.ipAddress_ = ipAddress_;
          result.macAddress_ = macAddress_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair) {
            return mergeFrom((com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair other) {
          if (other == com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair.getDefaultInstance()) return this;
          if (!other.getIpAddress().isEmpty()) {
            ipAddress_ = other.ipAddress_;
            onChanged();
          }
          if (!other.getMacAddress().isEmpty()) {
            macAddress_ = other.macAddress_;
            onChanged();
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object ipAddress_ = "";
        /**
         * <code>optional string ip_address = 1;</code>
         */
        public java.lang.String getIpAddress() {
          java.lang.Object ref = ipAddress_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            ipAddress_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string ip_address = 1;</code>
         */
        public com.google.protobuf.ByteString
            getIpAddressBytes() {
          java.lang.Object ref = ipAddress_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            ipAddress_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string ip_address = 1;</code>
         */
        public Builder setIpAddress(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          ipAddress_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string ip_address = 1;</code>
         */
        public Builder clearIpAddress() {
          
          ipAddress_ = getDefaultInstance().getIpAddress();
          onChanged();
          return this;
        }
        /**
         * <code>optional string ip_address = 1;</code>
         */
        public Builder setIpAddressBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          ipAddress_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object macAddress_ = "";
        /**
         * <code>optional string mac_address = 2;</code>
         */
        public java.lang.String getMacAddress() {
          java.lang.Object ref = macAddress_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            macAddress_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string mac_address = 2;</code>
         */
        public com.google.protobuf.ByteString
            getMacAddressBytes() {
          java.lang.Object ref = macAddress_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            macAddress_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string mac_address = 2;</code>
         */
        public Builder setMacAddress(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          macAddress_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string mac_address = 2;</code>
         */
        public Builder clearMacAddress() {
          
          macAddress_ = getDefaultInstance().getMacAddress();
          onChanged();
          return this;
        }
        /**
         * <code>optional string mac_address = 2;</code>
         */
        public Builder setMacAddressBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          macAddress_ = value;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:aliothcontroller.PortConfiguration.AllowAddressPair)
      }

      // @@protoc_insertion_point(class_scope:aliothcontroller.PortConfiguration.AllowAddressPair)
      private static final com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair();
      }

      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<AllowAddressPair>
          PARSER = new com.google.protobuf.AbstractParser<AllowAddressPair>() {
        public AllowAddressPair parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new AllowAddressPair(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<AllowAddressPair> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<AllowAddressPair> getParserForType() {
        return PARSER;
      }

      public com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ExtraDhcpOptionOrBuilder extends
        // @@protoc_insertion_point(interface_extends:aliothcontroller.PortConfiguration.ExtraDhcpOption)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string name = 1;</code>
       */
      java.lang.String getName();
      /**
       * <code>optional string name = 1;</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>optional string value = 2;</code>
       */
      java.lang.String getValue();
      /**
       * <code>optional string value = 2;</code>
       */
      com.google.protobuf.ByteString
          getValueBytes();
    }
    /**
     * Protobuf type {@code aliothcontroller.PortConfiguration.ExtraDhcpOption}
     */
    public  static final class ExtraDhcpOption extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:aliothcontroller.PortConfiguration.ExtraDhcpOption)
        ExtraDhcpOptionOrBuilder {
      // Use ExtraDhcpOption.newBuilder() to construct.
      private ExtraDhcpOption(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ExtraDhcpOption() {
        name_ = "";
        value_ = "";
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private ExtraDhcpOption(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                name_ = s;
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();

                value_ = s;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortConfiguration_ExtraDhcpOption_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortConfiguration_ExtraDhcpOption_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption.class, com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption.Builder.class);
      }

      public static final int NAME_FIELD_NUMBER = 1;
      private volatile java.lang.Object name_;
      /**
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int VALUE_FIELD_NUMBER = 2;
      private volatile java.lang.Object value_;
      /**
       * <code>optional string value = 2;</code>
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          value_ = s;
          return s;
        }
      }
      /**
       * <code>optional string value = 2;</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getNameBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
        }
        if (!getValueBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_);
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getNameBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
        }
        if (!getValueBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, value_);
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption)) {
          return super.equals(obj);
        }
        com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption other = (com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption) obj;

        boolean result = true;
        result = result && getName()
            .equals(other.getName());
        result = result && getValue()
            .equals(other.getValue());
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValue().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code aliothcontroller.PortConfiguration.ExtraDhcpOption}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:aliothcontroller.PortConfiguration.ExtraDhcpOption)
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOptionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortConfiguration_ExtraDhcpOption_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortConfiguration_ExtraDhcpOption_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption.class, com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption.Builder.class);
        }

        // Construct using com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          name_ = "";

          value_ = "";

          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortConfiguration_ExtraDhcpOption_descriptor;
        }

        public com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption getDefaultInstanceForType() {
          return com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption.getDefaultInstance();
        }

        public com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption build() {
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption buildPartial() {
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption result = new com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption(this);
          result.name_ = name_;
          result.value_ = value_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption) {
            return mergeFrom((com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption other) {
          if (other == com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption.getDefaultInstance()) return this;
          if (!other.getName().isEmpty()) {
            name_ = other.name_;
            onChanged();
          }
          if (!other.getValue().isEmpty()) {
            value_ = other.value_;
            onChanged();
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object name_ = "";
        /**
         * <code>optional string name = 1;</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string name = 1;</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string name = 1;</code>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 1;</code>
         */
        public Builder clearName() {
          
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 1;</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          name_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object value_ = "";
        /**
         * <code>optional string value = 2;</code>
         */
        public java.lang.String getValue() {
          java.lang.Object ref = value_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            value_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string value = 2;</code>
         */
        public com.google.protobuf.ByteString
            getValueBytes() {
          java.lang.Object ref = value_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            value_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string value = 2;</code>
         */
        public Builder setValue(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string value = 2;</code>
         */
        public Builder clearValue() {
          
          value_ = getDefaultInstance().getValue();
          onChanged();
          return this;
        }
        /**
         * <code>optional string value = 2;</code>
         */
        public Builder setValueBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          value_ = value;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:aliothcontroller.PortConfiguration.ExtraDhcpOption)
      }

      // @@protoc_insertion_point(class_scope:aliothcontroller.PortConfiguration.ExtraDhcpOption)
      private static final com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption();
      }

      public static com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ExtraDhcpOption>
          PARSER = new com.google.protobuf.AbstractParser<ExtraDhcpOption>() {
        public ExtraDhcpOption parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new ExtraDhcpOption(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<ExtraDhcpOption> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ExtraDhcpOption> getParserForType() {
        return PARSER;
      }

      public com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    /**
     * <code>optional int32 version = 1;</code>
     */
    public int getVersion() {
      return version_;
    }

    public static final int PROJECT_ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object projectId_;
    /**
     * <code>optional string project_id = 2;</code>
     */
    public java.lang.String getProjectId() {
      java.lang.Object ref = projectId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        projectId_ = s;
        return s;
      }
    }
    /**
     * <code>optional string project_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getProjectIdBytes() {
      java.lang.Object ref = projectId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        projectId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NETWORK_ID_FIELD_NUMBER = 3;
    private volatile java.lang.Object networkId_;
    /**
     * <code>optional string network_id = 3;</code>
     */
    public java.lang.String getNetworkId() {
      java.lang.Object ref = networkId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        networkId_ = s;
        return s;
      }
    }
    /**
     * <code>optional string network_id = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNetworkIdBytes() {
      java.lang.Object ref = networkId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        networkId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 4;
    private volatile java.lang.Object id_;
    /**
     * <code>optional string id = 4;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <code>optional string id = 4;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 5;
    private volatile java.lang.Object name_;
    /**
     * <code>optional string name = 5;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>optional string name = 5;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ADMIN_STATE_UP_FIELD_NUMBER = 6;
    private boolean adminStateUp_;
    /**
     * <code>optional bool admin_state_up = 6;</code>
     */
    public boolean getAdminStateUp() {
      return adminStateUp_;
    }

    public static final int MAC_ADDRESS_FIELD_NUMBER = 7;
    private volatile java.lang.Object macAddress_;
    /**
     * <code>optional string mac_address = 7;</code>
     */
    public java.lang.String getMacAddress() {
      java.lang.Object ref = macAddress_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        macAddress_ = s;
        return s;
      }
    }
    /**
     * <code>optional string mac_address = 7;</code>
     */
    public com.google.protobuf.ByteString
        getMacAddressBytes() {
      java.lang.Object ref = macAddress_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        macAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VETH_NAME_FIELD_NUMBER = 8;
    private volatile java.lang.Object vethName_;
    /**
     * <code>optional string veth_name = 8;</code>
     */
    public java.lang.String getVethName() {
      java.lang.Object ref = vethName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        vethName_ = s;
        return s;
      }
    }
    /**
     * <code>optional string veth_name = 8;</code>
     */
    public com.google.protobuf.ByteString
        getVethNameBytes() {
      java.lang.Object ref = vethName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        vethName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HOST_INFO_FIELD_NUMBER = 9;
    private com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo hostInfo_;
    /**
     * <code>optional .aliothcontroller.PortConfiguration.HostInfo host_info = 9;</code>
     */
    public boolean hasHostInfo() {
      return hostInfo_ != null;
    }
    /**
     * <code>optional .aliothcontroller.PortConfiguration.HostInfo host_info = 9;</code>
     */
    public com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo getHostInfo() {
      return hostInfo_ == null ? com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo.getDefaultInstance() : hostInfo_;
    }
    /**
     * <code>optional .aliothcontroller.PortConfiguration.HostInfo host_info = 9;</code>
     */
    public com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfoOrBuilder getHostInfoOrBuilder() {
      return getHostInfo();
    }

    public static final int FIXED_IPS_FIELD_NUMBER = 10;
    private java.util.List<com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp> fixedIps_;
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.FixedIp fixed_ips = 10;</code>
     */
    public java.util.List<com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp> getFixedIpsList() {
      return fixedIps_;
    }
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.FixedIp fixed_ips = 10;</code>
     */
    public java.util.List<? extends com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIpOrBuilder> 
        getFixedIpsOrBuilderList() {
      return fixedIps_;
    }
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.FixedIp fixed_ips = 10;</code>
     */
    public int getFixedIpsCount() {
      return fixedIps_.size();
    }
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.FixedIp fixed_ips = 10;</code>
     */
    public com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp getFixedIps(int index) {
      return fixedIps_.get(index);
    }
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.FixedIp fixed_ips = 10;</code>
     */
    public com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIpOrBuilder getFixedIpsOrBuilder(
        int index) {
      return fixedIps_.get(index);
    }

    public static final int SECURITY_GROUP_IDS_FIELD_NUMBER = 11;
    private java.util.List<com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId> securityGroupIds_;
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.SecurityGroupId security_group_ids = 11;</code>
     */
    public java.util.List<com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId> getSecurityGroupIdsList() {
      return securityGroupIds_;
    }
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.SecurityGroupId security_group_ids = 11;</code>
     */
    public java.util.List<? extends com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupIdOrBuilder> 
        getSecurityGroupIdsOrBuilderList() {
      return securityGroupIds_;
    }
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.SecurityGroupId security_group_ids = 11;</code>
     */
    public int getSecurityGroupIdsCount() {
      return securityGroupIds_.size();
    }
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.SecurityGroupId security_group_ids = 11;</code>
     */
    public com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId getSecurityGroupIds(int index) {
      return securityGroupIds_.get(index);
    }
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.SecurityGroupId security_group_ids = 11;</code>
     */
    public com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupIdOrBuilder getSecurityGroupIdsOrBuilder(
        int index) {
      return securityGroupIds_.get(index);
    }

    public static final int ALLOW_ADDRESS_PAIRS_FIELD_NUMBER = 12;
    private java.util.List<com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair> allowAddressPairs_;
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.AllowAddressPair allow_address_pairs = 12;</code>
     */
    public java.util.List<com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair> getAllowAddressPairsList() {
      return allowAddressPairs_;
    }
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.AllowAddressPair allow_address_pairs = 12;</code>
     */
    public java.util.List<? extends com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPairOrBuilder> 
        getAllowAddressPairsOrBuilderList() {
      return allowAddressPairs_;
    }
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.AllowAddressPair allow_address_pairs = 12;</code>
     */
    public int getAllowAddressPairsCount() {
      return allowAddressPairs_.size();
    }
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.AllowAddressPair allow_address_pairs = 12;</code>
     */
    public com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair getAllowAddressPairs(int index) {
      return allowAddressPairs_.get(index);
    }
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.AllowAddressPair allow_address_pairs = 12;</code>
     */
    public com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPairOrBuilder getAllowAddressPairsOrBuilder(
        int index) {
      return allowAddressPairs_.get(index);
    }

    public static final int EXTRA_DHCP_OPTIONS_FIELD_NUMBER = 13;
    private java.util.List<com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption> extraDhcpOptions_;
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.ExtraDhcpOption extra_dhcp_options = 13;</code>
     */
    public java.util.List<com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption> getExtraDhcpOptionsList() {
      return extraDhcpOptions_;
    }
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.ExtraDhcpOption extra_dhcp_options = 13;</code>
     */
    public java.util.List<? extends com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOptionOrBuilder> 
        getExtraDhcpOptionsOrBuilderList() {
      return extraDhcpOptions_;
    }
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.ExtraDhcpOption extra_dhcp_options = 13;</code>
     */
    public int getExtraDhcpOptionsCount() {
      return extraDhcpOptions_.size();
    }
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.ExtraDhcpOption extra_dhcp_options = 13;</code>
     */
    public com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption getExtraDhcpOptions(int index) {
      return extraDhcpOptions_.get(index);
    }
    /**
     * <code>repeated .aliothcontroller.PortConfiguration.ExtraDhcpOption extra_dhcp_options = 13;</code>
     */
    public com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOptionOrBuilder getExtraDhcpOptionsOrBuilder(
        int index) {
      return extraDhcpOptions_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (version_ != 0) {
        output.writeInt32(1, version_);
      }
      if (!getProjectIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, projectId_);
      }
      if (!getNetworkIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, networkId_);
      }
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, name_);
      }
      if (adminStateUp_ != false) {
        output.writeBool(6, adminStateUp_);
      }
      if (!getMacAddressBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, macAddress_);
      }
      if (!getVethNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, vethName_);
      }
      if (hostInfo_ != null) {
        output.writeMessage(9, getHostInfo());
      }
      for (int i = 0; i < fixedIps_.size(); i++) {
        output.writeMessage(10, fixedIps_.get(i));
      }
      for (int i = 0; i < securityGroupIds_.size(); i++) {
        output.writeMessage(11, securityGroupIds_.get(i));
      }
      for (int i = 0; i < allowAddressPairs_.size(); i++) {
        output.writeMessage(12, allowAddressPairs_.get(i));
      }
      for (int i = 0; i < extraDhcpOptions_.size(); i++) {
        output.writeMessage(13, extraDhcpOptions_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (version_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, version_);
      }
      if (!getProjectIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, projectId_);
      }
      if (!getNetworkIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, networkId_);
      }
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, name_);
      }
      if (adminStateUp_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, adminStateUp_);
      }
      if (!getMacAddressBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, macAddress_);
      }
      if (!getVethNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, vethName_);
      }
      if (hostInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getHostInfo());
      }
      for (int i = 0; i < fixedIps_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, fixedIps_.get(i));
      }
      for (int i = 0; i < securityGroupIds_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, securityGroupIds_.get(i));
      }
      for (int i = 0; i < allowAddressPairs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, allowAddressPairs_.get(i));
      }
      for (int i = 0; i < extraDhcpOptions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, extraDhcpOptions_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futurewei.alioth.controller.schema.Port.PortConfiguration)) {
        return super.equals(obj);
      }
      com.futurewei.alioth.controller.schema.Port.PortConfiguration other = (com.futurewei.alioth.controller.schema.Port.PortConfiguration) obj;

      boolean result = true;
      result = result && (getVersion()
          == other.getVersion());
      result = result && getProjectId()
          .equals(other.getProjectId());
      result = result && getNetworkId()
          .equals(other.getNetworkId());
      result = result && getId()
          .equals(other.getId());
      result = result && getName()
          .equals(other.getName());
      result = result && (getAdminStateUp()
          == other.getAdminStateUp());
      result = result && getMacAddress()
          .equals(other.getMacAddress());
      result = result && getVethName()
          .equals(other.getVethName());
      result = result && (hasHostInfo() == other.hasHostInfo());
      if (hasHostInfo()) {
        result = result && getHostInfo()
            .equals(other.getHostInfo());
      }
      result = result && getFixedIpsList()
          .equals(other.getFixedIpsList());
      result = result && getSecurityGroupIdsList()
          .equals(other.getSecurityGroupIdsList());
      result = result && getAllowAddressPairsList()
          .equals(other.getAllowAddressPairsList());
      result = result && getExtraDhcpOptionsList()
          .equals(other.getExtraDhcpOptionsList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion();
      hash = (37 * hash) + PROJECT_ID_FIELD_NUMBER;
      hash = (53 * hash) + getProjectId().hashCode();
      hash = (37 * hash) + NETWORK_ID_FIELD_NUMBER;
      hash = (53 * hash) + getNetworkId().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + ADMIN_STATE_UP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getAdminStateUp());
      hash = (37 * hash) + MAC_ADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + getMacAddress().hashCode();
      hash = (37 * hash) + VETH_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getVethName().hashCode();
      if (hasHostInfo()) {
        hash = (37 * hash) + HOST_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getHostInfo().hashCode();
      }
      if (getFixedIpsCount() > 0) {
        hash = (37 * hash) + FIXED_IPS_FIELD_NUMBER;
        hash = (53 * hash) + getFixedIpsList().hashCode();
      }
      if (getSecurityGroupIdsCount() > 0) {
        hash = (37 * hash) + SECURITY_GROUP_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getSecurityGroupIdsList().hashCode();
      }
      if (getAllowAddressPairsCount() > 0) {
        hash = (37 * hash) + ALLOW_ADDRESS_PAIRS_FIELD_NUMBER;
        hash = (53 * hash) + getAllowAddressPairsList().hashCode();
      }
      if (getExtraDhcpOptionsCount() > 0) {
        hash = (37 * hash) + EXTRA_DHCP_OPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getExtraDhcpOptionsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futurewei.alioth.controller.schema.Port.PortConfiguration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futurewei.alioth.controller.schema.Port.PortConfiguration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futurewei.alioth.controller.schema.Port.PortConfiguration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futurewei.alioth.controller.schema.Port.PortConfiguration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futurewei.alioth.controller.schema.Port.PortConfiguration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futurewei.alioth.controller.schema.Port.PortConfiguration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futurewei.alioth.controller.schema.Port.PortConfiguration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futurewei.alioth.controller.schema.Port.PortConfiguration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futurewei.alioth.controller.schema.Port.PortConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futurewei.alioth.controller.schema.Port.PortConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futurewei.alioth.controller.schema.Port.PortConfiguration prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code aliothcontroller.PortConfiguration}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:aliothcontroller.PortConfiguration)
        com.futurewei.alioth.controller.schema.Port.PortConfigurationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortConfiguration_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortConfiguration_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futurewei.alioth.controller.schema.Port.PortConfiguration.class, com.futurewei.alioth.controller.schema.Port.PortConfiguration.Builder.class);
      }

      // Construct using com.futurewei.alioth.controller.schema.Port.PortConfiguration.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFixedIpsFieldBuilder();
          getSecurityGroupIdsFieldBuilder();
          getAllowAddressPairsFieldBuilder();
          getExtraDhcpOptionsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        version_ = 0;

        projectId_ = "";

        networkId_ = "";

        id_ = "";

        name_ = "";

        adminStateUp_ = false;

        macAddress_ = "";

        vethName_ = "";

        if (hostInfoBuilder_ == null) {
          hostInfo_ = null;
        } else {
          hostInfo_ = null;
          hostInfoBuilder_ = null;
        }
        if (fixedIpsBuilder_ == null) {
          fixedIps_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          fixedIpsBuilder_.clear();
        }
        if (securityGroupIdsBuilder_ == null) {
          securityGroupIds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
        } else {
          securityGroupIdsBuilder_.clear();
        }
        if (allowAddressPairsBuilder_ == null) {
          allowAddressPairs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          allowAddressPairsBuilder_.clear();
        }
        if (extraDhcpOptionsBuilder_ == null) {
          extraDhcpOptions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
        } else {
          extraDhcpOptionsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortConfiguration_descriptor;
      }

      public com.futurewei.alioth.controller.schema.Port.PortConfiguration getDefaultInstanceForType() {
        return com.futurewei.alioth.controller.schema.Port.PortConfiguration.getDefaultInstance();
      }

      public com.futurewei.alioth.controller.schema.Port.PortConfiguration build() {
        com.futurewei.alioth.controller.schema.Port.PortConfiguration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futurewei.alioth.controller.schema.Port.PortConfiguration buildPartial() {
        com.futurewei.alioth.controller.schema.Port.PortConfiguration result = new com.futurewei.alioth.controller.schema.Port.PortConfiguration(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.version_ = version_;
        result.projectId_ = projectId_;
        result.networkId_ = networkId_;
        result.id_ = id_;
        result.name_ = name_;
        result.adminStateUp_ = adminStateUp_;
        result.macAddress_ = macAddress_;
        result.vethName_ = vethName_;
        if (hostInfoBuilder_ == null) {
          result.hostInfo_ = hostInfo_;
        } else {
          result.hostInfo_ = hostInfoBuilder_.build();
        }
        if (fixedIpsBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            fixedIps_ = java.util.Collections.unmodifiableList(fixedIps_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.fixedIps_ = fixedIps_;
        } else {
          result.fixedIps_ = fixedIpsBuilder_.build();
        }
        if (securityGroupIdsBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            securityGroupIds_ = java.util.Collections.unmodifiableList(securityGroupIds_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.securityGroupIds_ = securityGroupIds_;
        } else {
          result.securityGroupIds_ = securityGroupIdsBuilder_.build();
        }
        if (allowAddressPairsBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800)) {
            allowAddressPairs_ = java.util.Collections.unmodifiableList(allowAddressPairs_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.allowAddressPairs_ = allowAddressPairs_;
        } else {
          result.allowAddressPairs_ = allowAddressPairsBuilder_.build();
        }
        if (extraDhcpOptionsBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000)) {
            extraDhcpOptions_ = java.util.Collections.unmodifiableList(extraDhcpOptions_);
            bitField0_ = (bitField0_ & ~0x00001000);
          }
          result.extraDhcpOptions_ = extraDhcpOptions_;
        } else {
          result.extraDhcpOptions_ = extraDhcpOptionsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futurewei.alioth.controller.schema.Port.PortConfiguration) {
          return mergeFrom((com.futurewei.alioth.controller.schema.Port.PortConfiguration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futurewei.alioth.controller.schema.Port.PortConfiguration other) {
        if (other == com.futurewei.alioth.controller.schema.Port.PortConfiguration.getDefaultInstance()) return this;
        if (other.getVersion() != 0) {
          setVersion(other.getVersion());
        }
        if (!other.getProjectId().isEmpty()) {
          projectId_ = other.projectId_;
          onChanged();
        }
        if (!other.getNetworkId().isEmpty()) {
          networkId_ = other.networkId_;
          onChanged();
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getAdminStateUp() != false) {
          setAdminStateUp(other.getAdminStateUp());
        }
        if (!other.getMacAddress().isEmpty()) {
          macAddress_ = other.macAddress_;
          onChanged();
        }
        if (!other.getVethName().isEmpty()) {
          vethName_ = other.vethName_;
          onChanged();
        }
        if (other.hasHostInfo()) {
          mergeHostInfo(other.getHostInfo());
        }
        if (fixedIpsBuilder_ == null) {
          if (!other.fixedIps_.isEmpty()) {
            if (fixedIps_.isEmpty()) {
              fixedIps_ = other.fixedIps_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureFixedIpsIsMutable();
              fixedIps_.addAll(other.fixedIps_);
            }
            onChanged();
          }
        } else {
          if (!other.fixedIps_.isEmpty()) {
            if (fixedIpsBuilder_.isEmpty()) {
              fixedIpsBuilder_.dispose();
              fixedIpsBuilder_ = null;
              fixedIps_ = other.fixedIps_;
              bitField0_ = (bitField0_ & ~0x00000200);
              fixedIpsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFixedIpsFieldBuilder() : null;
            } else {
              fixedIpsBuilder_.addAllMessages(other.fixedIps_);
            }
          }
        }
        if (securityGroupIdsBuilder_ == null) {
          if (!other.securityGroupIds_.isEmpty()) {
            if (securityGroupIds_.isEmpty()) {
              securityGroupIds_ = other.securityGroupIds_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureSecurityGroupIdsIsMutable();
              securityGroupIds_.addAll(other.securityGroupIds_);
            }
            onChanged();
          }
        } else {
          if (!other.securityGroupIds_.isEmpty()) {
            if (securityGroupIdsBuilder_.isEmpty()) {
              securityGroupIdsBuilder_.dispose();
              securityGroupIdsBuilder_ = null;
              securityGroupIds_ = other.securityGroupIds_;
              bitField0_ = (bitField0_ & ~0x00000400);
              securityGroupIdsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSecurityGroupIdsFieldBuilder() : null;
            } else {
              securityGroupIdsBuilder_.addAllMessages(other.securityGroupIds_);
            }
          }
        }
        if (allowAddressPairsBuilder_ == null) {
          if (!other.allowAddressPairs_.isEmpty()) {
            if (allowAddressPairs_.isEmpty()) {
              allowAddressPairs_ = other.allowAddressPairs_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensureAllowAddressPairsIsMutable();
              allowAddressPairs_.addAll(other.allowAddressPairs_);
            }
            onChanged();
          }
        } else {
          if (!other.allowAddressPairs_.isEmpty()) {
            if (allowAddressPairsBuilder_.isEmpty()) {
              allowAddressPairsBuilder_.dispose();
              allowAddressPairsBuilder_ = null;
              allowAddressPairs_ = other.allowAddressPairs_;
              bitField0_ = (bitField0_ & ~0x00000800);
              allowAddressPairsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAllowAddressPairsFieldBuilder() : null;
            } else {
              allowAddressPairsBuilder_.addAllMessages(other.allowAddressPairs_);
            }
          }
        }
        if (extraDhcpOptionsBuilder_ == null) {
          if (!other.extraDhcpOptions_.isEmpty()) {
            if (extraDhcpOptions_.isEmpty()) {
              extraDhcpOptions_ = other.extraDhcpOptions_;
              bitField0_ = (bitField0_ & ~0x00001000);
            } else {
              ensureExtraDhcpOptionsIsMutable();
              extraDhcpOptions_.addAll(other.extraDhcpOptions_);
            }
            onChanged();
          }
        } else {
          if (!other.extraDhcpOptions_.isEmpty()) {
            if (extraDhcpOptionsBuilder_.isEmpty()) {
              extraDhcpOptionsBuilder_.dispose();
              extraDhcpOptionsBuilder_ = null;
              extraDhcpOptions_ = other.extraDhcpOptions_;
              bitField0_ = (bitField0_ & ~0x00001000);
              extraDhcpOptionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getExtraDhcpOptionsFieldBuilder() : null;
            } else {
              extraDhcpOptionsBuilder_.addAllMessages(other.extraDhcpOptions_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futurewei.alioth.controller.schema.Port.PortConfiguration parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futurewei.alioth.controller.schema.Port.PortConfiguration) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int version_ ;
      /**
       * <code>optional int32 version = 1;</code>
       */
      public int getVersion() {
        return version_;
      }
      /**
       * <code>optional int32 version = 1;</code>
       */
      public Builder setVersion(int value) {
        
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 version = 1;</code>
       */
      public Builder clearVersion() {
        
        version_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object projectId_ = "";
      /**
       * <code>optional string project_id = 2;</code>
       */
      public java.lang.String getProjectId() {
        java.lang.Object ref = projectId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          projectId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string project_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getProjectIdBytes() {
        java.lang.Object ref = projectId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          projectId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string project_id = 2;</code>
       */
      public Builder setProjectId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        projectId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string project_id = 2;</code>
       */
      public Builder clearProjectId() {
        
        projectId_ = getDefaultInstance().getProjectId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string project_id = 2;</code>
       */
      public Builder setProjectIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        projectId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object networkId_ = "";
      /**
       * <code>optional string network_id = 3;</code>
       */
      public java.lang.String getNetworkId() {
        java.lang.Object ref = networkId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          networkId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string network_id = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNetworkIdBytes() {
        java.lang.Object ref = networkId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          networkId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string network_id = 3;</code>
       */
      public Builder setNetworkId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        networkId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string network_id = 3;</code>
       */
      public Builder clearNetworkId() {
        
        networkId_ = getDefaultInstance().getNetworkId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string network_id = 3;</code>
       */
      public Builder setNetworkIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        networkId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <code>optional string id = 4;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string id = 4;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string id = 4;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 4;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 4;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 5;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 5;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 5;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 5;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 5;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private boolean adminStateUp_ ;
      /**
       * <code>optional bool admin_state_up = 6;</code>
       */
      public boolean getAdminStateUp() {
        return adminStateUp_;
      }
      /**
       * <code>optional bool admin_state_up = 6;</code>
       */
      public Builder setAdminStateUp(boolean value) {
        
        adminStateUp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool admin_state_up = 6;</code>
       */
      public Builder clearAdminStateUp() {
        
        adminStateUp_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object macAddress_ = "";
      /**
       * <code>optional string mac_address = 7;</code>
       */
      public java.lang.String getMacAddress() {
        java.lang.Object ref = macAddress_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          macAddress_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string mac_address = 7;</code>
       */
      public com.google.protobuf.ByteString
          getMacAddressBytes() {
        java.lang.Object ref = macAddress_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          macAddress_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string mac_address = 7;</code>
       */
      public Builder setMacAddress(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        macAddress_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string mac_address = 7;</code>
       */
      public Builder clearMacAddress() {
        
        macAddress_ = getDefaultInstance().getMacAddress();
        onChanged();
        return this;
      }
      /**
       * <code>optional string mac_address = 7;</code>
       */
      public Builder setMacAddressBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        macAddress_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object vethName_ = "";
      /**
       * <code>optional string veth_name = 8;</code>
       */
      public java.lang.String getVethName() {
        java.lang.Object ref = vethName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          vethName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string veth_name = 8;</code>
       */
      public com.google.protobuf.ByteString
          getVethNameBytes() {
        java.lang.Object ref = vethName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          vethName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string veth_name = 8;</code>
       */
      public Builder setVethName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        vethName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string veth_name = 8;</code>
       */
      public Builder clearVethName() {
        
        vethName_ = getDefaultInstance().getVethName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string veth_name = 8;</code>
       */
      public Builder setVethNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        vethName_ = value;
        onChanged();
        return this;
      }

      private com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo hostInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo, com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo.Builder, com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfoOrBuilder> hostInfoBuilder_;
      /**
       * <code>optional .aliothcontroller.PortConfiguration.HostInfo host_info = 9;</code>
       */
      public boolean hasHostInfo() {
        return hostInfoBuilder_ != null || hostInfo_ != null;
      }
      /**
       * <code>optional .aliothcontroller.PortConfiguration.HostInfo host_info = 9;</code>
       */
      public com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo getHostInfo() {
        if (hostInfoBuilder_ == null) {
          return hostInfo_ == null ? com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo.getDefaultInstance() : hostInfo_;
        } else {
          return hostInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .aliothcontroller.PortConfiguration.HostInfo host_info = 9;</code>
       */
      public Builder setHostInfo(com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo value) {
        if (hostInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          hostInfo_ = value;
          onChanged();
        } else {
          hostInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .aliothcontroller.PortConfiguration.HostInfo host_info = 9;</code>
       */
      public Builder setHostInfo(
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo.Builder builderForValue) {
        if (hostInfoBuilder_ == null) {
          hostInfo_ = builderForValue.build();
          onChanged();
        } else {
          hostInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .aliothcontroller.PortConfiguration.HostInfo host_info = 9;</code>
       */
      public Builder mergeHostInfo(com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo value) {
        if (hostInfoBuilder_ == null) {
          if (hostInfo_ != null) {
            hostInfo_ =
              com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo.newBuilder(hostInfo_).mergeFrom(value).buildPartial();
          } else {
            hostInfo_ = value;
          }
          onChanged();
        } else {
          hostInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .aliothcontroller.PortConfiguration.HostInfo host_info = 9;</code>
       */
      public Builder clearHostInfo() {
        if (hostInfoBuilder_ == null) {
          hostInfo_ = null;
          onChanged();
        } else {
          hostInfo_ = null;
          hostInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .aliothcontroller.PortConfiguration.HostInfo host_info = 9;</code>
       */
      public com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo.Builder getHostInfoBuilder() {
        
        onChanged();
        return getHostInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .aliothcontroller.PortConfiguration.HostInfo host_info = 9;</code>
       */
      public com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfoOrBuilder getHostInfoOrBuilder() {
        if (hostInfoBuilder_ != null) {
          return hostInfoBuilder_.getMessageOrBuilder();
        } else {
          return hostInfo_ == null ?
              com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo.getDefaultInstance() : hostInfo_;
        }
      }
      /**
       * <code>optional .aliothcontroller.PortConfiguration.HostInfo host_info = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo, com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo.Builder, com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfoOrBuilder> 
          getHostInfoFieldBuilder() {
        if (hostInfoBuilder_ == null) {
          hostInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo, com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfo.Builder, com.futurewei.alioth.controller.schema.Port.PortConfiguration.HostInfoOrBuilder>(
                  getHostInfo(),
                  getParentForChildren(),
                  isClean());
          hostInfo_ = null;
        }
        return hostInfoBuilder_;
      }

      private java.util.List<com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp> fixedIps_ =
        java.util.Collections.emptyList();
      private void ensureFixedIpsIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          fixedIps_ = new java.util.ArrayList<com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp>(fixedIps_);
          bitField0_ |= 0x00000200;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp, com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp.Builder, com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIpOrBuilder> fixedIpsBuilder_;

      /**
       * <code>repeated .aliothcontroller.PortConfiguration.FixedIp fixed_ips = 10;</code>
       */
      public java.util.List<com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp> getFixedIpsList() {
        if (fixedIpsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fixedIps_);
        } else {
          return fixedIpsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.FixedIp fixed_ips = 10;</code>
       */
      public int getFixedIpsCount() {
        if (fixedIpsBuilder_ == null) {
          return fixedIps_.size();
        } else {
          return fixedIpsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.FixedIp fixed_ips = 10;</code>
       */
      public com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp getFixedIps(int index) {
        if (fixedIpsBuilder_ == null) {
          return fixedIps_.get(index);
        } else {
          return fixedIpsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.FixedIp fixed_ips = 10;</code>
       */
      public Builder setFixedIps(
          int index, com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp value) {
        if (fixedIpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFixedIpsIsMutable();
          fixedIps_.set(index, value);
          onChanged();
        } else {
          fixedIpsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.FixedIp fixed_ips = 10;</code>
       */
      public Builder setFixedIps(
          int index, com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp.Builder builderForValue) {
        if (fixedIpsBuilder_ == null) {
          ensureFixedIpsIsMutable();
          fixedIps_.set(index, builderForValue.build());
          onChanged();
        } else {
          fixedIpsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.FixedIp fixed_ips = 10;</code>
       */
      public Builder addFixedIps(com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp value) {
        if (fixedIpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFixedIpsIsMutable();
          fixedIps_.add(value);
          onChanged();
        } else {
          fixedIpsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.FixedIp fixed_ips = 10;</code>
       */
      public Builder addFixedIps(
          int index, com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp value) {
        if (fixedIpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFixedIpsIsMutable();
          fixedIps_.add(index, value);
          onChanged();
        } else {
          fixedIpsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.FixedIp fixed_ips = 10;</code>
       */
      public Builder addFixedIps(
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp.Builder builderForValue) {
        if (fixedIpsBuilder_ == null) {
          ensureFixedIpsIsMutable();
          fixedIps_.add(builderForValue.build());
          onChanged();
        } else {
          fixedIpsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.FixedIp fixed_ips = 10;</code>
       */
      public Builder addFixedIps(
          int index, com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp.Builder builderForValue) {
        if (fixedIpsBuilder_ == null) {
          ensureFixedIpsIsMutable();
          fixedIps_.add(index, builderForValue.build());
          onChanged();
        } else {
          fixedIpsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.FixedIp fixed_ips = 10;</code>
       */
      public Builder addAllFixedIps(
          java.lang.Iterable<? extends com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp> values) {
        if (fixedIpsBuilder_ == null) {
          ensureFixedIpsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fixedIps_);
          onChanged();
        } else {
          fixedIpsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.FixedIp fixed_ips = 10;</code>
       */
      public Builder clearFixedIps() {
        if (fixedIpsBuilder_ == null) {
          fixedIps_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          fixedIpsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.FixedIp fixed_ips = 10;</code>
       */
      public Builder removeFixedIps(int index) {
        if (fixedIpsBuilder_ == null) {
          ensureFixedIpsIsMutable();
          fixedIps_.remove(index);
          onChanged();
        } else {
          fixedIpsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.FixedIp fixed_ips = 10;</code>
       */
      public com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp.Builder getFixedIpsBuilder(
          int index) {
        return getFixedIpsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.FixedIp fixed_ips = 10;</code>
       */
      public com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIpOrBuilder getFixedIpsOrBuilder(
          int index) {
        if (fixedIpsBuilder_ == null) {
          return fixedIps_.get(index);  } else {
          return fixedIpsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.FixedIp fixed_ips = 10;</code>
       */
      public java.util.List<? extends com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIpOrBuilder> 
           getFixedIpsOrBuilderList() {
        if (fixedIpsBuilder_ != null) {
          return fixedIpsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fixedIps_);
        }
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.FixedIp fixed_ips = 10;</code>
       */
      public com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp.Builder addFixedIpsBuilder() {
        return getFixedIpsFieldBuilder().addBuilder(
            com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp.getDefaultInstance());
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.FixedIp fixed_ips = 10;</code>
       */
      public com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp.Builder addFixedIpsBuilder(
          int index) {
        return getFixedIpsFieldBuilder().addBuilder(
            index, com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp.getDefaultInstance());
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.FixedIp fixed_ips = 10;</code>
       */
      public java.util.List<com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp.Builder> 
           getFixedIpsBuilderList() {
        return getFixedIpsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp, com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp.Builder, com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIpOrBuilder> 
          getFixedIpsFieldBuilder() {
        if (fixedIpsBuilder_ == null) {
          fixedIpsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp, com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIp.Builder, com.futurewei.alioth.controller.schema.Port.PortConfiguration.FixedIpOrBuilder>(
                  fixedIps_,
                  ((bitField0_ & 0x00000200) == 0x00000200),
                  getParentForChildren(),
                  isClean());
          fixedIps_ = null;
        }
        return fixedIpsBuilder_;
      }

      private java.util.List<com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId> securityGroupIds_ =
        java.util.Collections.emptyList();
      private void ensureSecurityGroupIdsIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          securityGroupIds_ = new java.util.ArrayList<com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId>(securityGroupIds_);
          bitField0_ |= 0x00000400;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId, com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId.Builder, com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupIdOrBuilder> securityGroupIdsBuilder_;

      /**
       * <code>repeated .aliothcontroller.PortConfiguration.SecurityGroupId security_group_ids = 11;</code>
       */
      public java.util.List<com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId> getSecurityGroupIdsList() {
        if (securityGroupIdsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(securityGroupIds_);
        } else {
          return securityGroupIdsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.SecurityGroupId security_group_ids = 11;</code>
       */
      public int getSecurityGroupIdsCount() {
        if (securityGroupIdsBuilder_ == null) {
          return securityGroupIds_.size();
        } else {
          return securityGroupIdsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.SecurityGroupId security_group_ids = 11;</code>
       */
      public com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId getSecurityGroupIds(int index) {
        if (securityGroupIdsBuilder_ == null) {
          return securityGroupIds_.get(index);
        } else {
          return securityGroupIdsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.SecurityGroupId security_group_ids = 11;</code>
       */
      public Builder setSecurityGroupIds(
          int index, com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId value) {
        if (securityGroupIdsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSecurityGroupIdsIsMutable();
          securityGroupIds_.set(index, value);
          onChanged();
        } else {
          securityGroupIdsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.SecurityGroupId security_group_ids = 11;</code>
       */
      public Builder setSecurityGroupIds(
          int index, com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId.Builder builderForValue) {
        if (securityGroupIdsBuilder_ == null) {
          ensureSecurityGroupIdsIsMutable();
          securityGroupIds_.set(index, builderForValue.build());
          onChanged();
        } else {
          securityGroupIdsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.SecurityGroupId security_group_ids = 11;</code>
       */
      public Builder addSecurityGroupIds(com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId value) {
        if (securityGroupIdsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSecurityGroupIdsIsMutable();
          securityGroupIds_.add(value);
          onChanged();
        } else {
          securityGroupIdsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.SecurityGroupId security_group_ids = 11;</code>
       */
      public Builder addSecurityGroupIds(
          int index, com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId value) {
        if (securityGroupIdsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSecurityGroupIdsIsMutable();
          securityGroupIds_.add(index, value);
          onChanged();
        } else {
          securityGroupIdsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.SecurityGroupId security_group_ids = 11;</code>
       */
      public Builder addSecurityGroupIds(
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId.Builder builderForValue) {
        if (securityGroupIdsBuilder_ == null) {
          ensureSecurityGroupIdsIsMutable();
          securityGroupIds_.add(builderForValue.build());
          onChanged();
        } else {
          securityGroupIdsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.SecurityGroupId security_group_ids = 11;</code>
       */
      public Builder addSecurityGroupIds(
          int index, com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId.Builder builderForValue) {
        if (securityGroupIdsBuilder_ == null) {
          ensureSecurityGroupIdsIsMutable();
          securityGroupIds_.add(index, builderForValue.build());
          onChanged();
        } else {
          securityGroupIdsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.SecurityGroupId security_group_ids = 11;</code>
       */
      public Builder addAllSecurityGroupIds(
          java.lang.Iterable<? extends com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId> values) {
        if (securityGroupIdsBuilder_ == null) {
          ensureSecurityGroupIdsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, securityGroupIds_);
          onChanged();
        } else {
          securityGroupIdsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.SecurityGroupId security_group_ids = 11;</code>
       */
      public Builder clearSecurityGroupIds() {
        if (securityGroupIdsBuilder_ == null) {
          securityGroupIds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          securityGroupIdsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.SecurityGroupId security_group_ids = 11;</code>
       */
      public Builder removeSecurityGroupIds(int index) {
        if (securityGroupIdsBuilder_ == null) {
          ensureSecurityGroupIdsIsMutable();
          securityGroupIds_.remove(index);
          onChanged();
        } else {
          securityGroupIdsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.SecurityGroupId security_group_ids = 11;</code>
       */
      public com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId.Builder getSecurityGroupIdsBuilder(
          int index) {
        return getSecurityGroupIdsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.SecurityGroupId security_group_ids = 11;</code>
       */
      public com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupIdOrBuilder getSecurityGroupIdsOrBuilder(
          int index) {
        if (securityGroupIdsBuilder_ == null) {
          return securityGroupIds_.get(index);  } else {
          return securityGroupIdsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.SecurityGroupId security_group_ids = 11;</code>
       */
      public java.util.List<? extends com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupIdOrBuilder> 
           getSecurityGroupIdsOrBuilderList() {
        if (securityGroupIdsBuilder_ != null) {
          return securityGroupIdsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(securityGroupIds_);
        }
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.SecurityGroupId security_group_ids = 11;</code>
       */
      public com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId.Builder addSecurityGroupIdsBuilder() {
        return getSecurityGroupIdsFieldBuilder().addBuilder(
            com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId.getDefaultInstance());
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.SecurityGroupId security_group_ids = 11;</code>
       */
      public com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId.Builder addSecurityGroupIdsBuilder(
          int index) {
        return getSecurityGroupIdsFieldBuilder().addBuilder(
            index, com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId.getDefaultInstance());
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.SecurityGroupId security_group_ids = 11;</code>
       */
      public java.util.List<com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId.Builder> 
           getSecurityGroupIdsBuilderList() {
        return getSecurityGroupIdsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId, com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId.Builder, com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupIdOrBuilder> 
          getSecurityGroupIdsFieldBuilder() {
        if (securityGroupIdsBuilder_ == null) {
          securityGroupIdsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId, com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupId.Builder, com.futurewei.alioth.controller.schema.Port.PortConfiguration.SecurityGroupIdOrBuilder>(
                  securityGroupIds_,
                  ((bitField0_ & 0x00000400) == 0x00000400),
                  getParentForChildren(),
                  isClean());
          securityGroupIds_ = null;
        }
        return securityGroupIdsBuilder_;
      }

      private java.util.List<com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair> allowAddressPairs_ =
        java.util.Collections.emptyList();
      private void ensureAllowAddressPairsIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          allowAddressPairs_ = new java.util.ArrayList<com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair>(allowAddressPairs_);
          bitField0_ |= 0x00000800;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair, com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair.Builder, com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPairOrBuilder> allowAddressPairsBuilder_;

      /**
       * <code>repeated .aliothcontroller.PortConfiguration.AllowAddressPair allow_address_pairs = 12;</code>
       */
      public java.util.List<com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair> getAllowAddressPairsList() {
        if (allowAddressPairsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(allowAddressPairs_);
        } else {
          return allowAddressPairsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.AllowAddressPair allow_address_pairs = 12;</code>
       */
      public int getAllowAddressPairsCount() {
        if (allowAddressPairsBuilder_ == null) {
          return allowAddressPairs_.size();
        } else {
          return allowAddressPairsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.AllowAddressPair allow_address_pairs = 12;</code>
       */
      public com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair getAllowAddressPairs(int index) {
        if (allowAddressPairsBuilder_ == null) {
          return allowAddressPairs_.get(index);
        } else {
          return allowAddressPairsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.AllowAddressPair allow_address_pairs = 12;</code>
       */
      public Builder setAllowAddressPairs(
          int index, com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair value) {
        if (allowAddressPairsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllowAddressPairsIsMutable();
          allowAddressPairs_.set(index, value);
          onChanged();
        } else {
          allowAddressPairsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.AllowAddressPair allow_address_pairs = 12;</code>
       */
      public Builder setAllowAddressPairs(
          int index, com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair.Builder builderForValue) {
        if (allowAddressPairsBuilder_ == null) {
          ensureAllowAddressPairsIsMutable();
          allowAddressPairs_.set(index, builderForValue.build());
          onChanged();
        } else {
          allowAddressPairsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.AllowAddressPair allow_address_pairs = 12;</code>
       */
      public Builder addAllowAddressPairs(com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair value) {
        if (allowAddressPairsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllowAddressPairsIsMutable();
          allowAddressPairs_.add(value);
          onChanged();
        } else {
          allowAddressPairsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.AllowAddressPair allow_address_pairs = 12;</code>
       */
      public Builder addAllowAddressPairs(
          int index, com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair value) {
        if (allowAddressPairsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllowAddressPairsIsMutable();
          allowAddressPairs_.add(index, value);
          onChanged();
        } else {
          allowAddressPairsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.AllowAddressPair allow_address_pairs = 12;</code>
       */
      public Builder addAllowAddressPairs(
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair.Builder builderForValue) {
        if (allowAddressPairsBuilder_ == null) {
          ensureAllowAddressPairsIsMutable();
          allowAddressPairs_.add(builderForValue.build());
          onChanged();
        } else {
          allowAddressPairsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.AllowAddressPair allow_address_pairs = 12;</code>
       */
      public Builder addAllowAddressPairs(
          int index, com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair.Builder builderForValue) {
        if (allowAddressPairsBuilder_ == null) {
          ensureAllowAddressPairsIsMutable();
          allowAddressPairs_.add(index, builderForValue.build());
          onChanged();
        } else {
          allowAddressPairsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.AllowAddressPair allow_address_pairs = 12;</code>
       */
      public Builder addAllAllowAddressPairs(
          java.lang.Iterable<? extends com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair> values) {
        if (allowAddressPairsBuilder_ == null) {
          ensureAllowAddressPairsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, allowAddressPairs_);
          onChanged();
        } else {
          allowAddressPairsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.AllowAddressPair allow_address_pairs = 12;</code>
       */
      public Builder clearAllowAddressPairs() {
        if (allowAddressPairsBuilder_ == null) {
          allowAddressPairs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
        } else {
          allowAddressPairsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.AllowAddressPair allow_address_pairs = 12;</code>
       */
      public Builder removeAllowAddressPairs(int index) {
        if (allowAddressPairsBuilder_ == null) {
          ensureAllowAddressPairsIsMutable();
          allowAddressPairs_.remove(index);
          onChanged();
        } else {
          allowAddressPairsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.AllowAddressPair allow_address_pairs = 12;</code>
       */
      public com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair.Builder getAllowAddressPairsBuilder(
          int index) {
        return getAllowAddressPairsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.AllowAddressPair allow_address_pairs = 12;</code>
       */
      public com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPairOrBuilder getAllowAddressPairsOrBuilder(
          int index) {
        if (allowAddressPairsBuilder_ == null) {
          return allowAddressPairs_.get(index);  } else {
          return allowAddressPairsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.AllowAddressPair allow_address_pairs = 12;</code>
       */
      public java.util.List<? extends com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPairOrBuilder> 
           getAllowAddressPairsOrBuilderList() {
        if (allowAddressPairsBuilder_ != null) {
          return allowAddressPairsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(allowAddressPairs_);
        }
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.AllowAddressPair allow_address_pairs = 12;</code>
       */
      public com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair.Builder addAllowAddressPairsBuilder() {
        return getAllowAddressPairsFieldBuilder().addBuilder(
            com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair.getDefaultInstance());
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.AllowAddressPair allow_address_pairs = 12;</code>
       */
      public com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair.Builder addAllowAddressPairsBuilder(
          int index) {
        return getAllowAddressPairsFieldBuilder().addBuilder(
            index, com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair.getDefaultInstance());
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.AllowAddressPair allow_address_pairs = 12;</code>
       */
      public java.util.List<com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair.Builder> 
           getAllowAddressPairsBuilderList() {
        return getAllowAddressPairsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair, com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair.Builder, com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPairOrBuilder> 
          getAllowAddressPairsFieldBuilder() {
        if (allowAddressPairsBuilder_ == null) {
          allowAddressPairsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair, com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPair.Builder, com.futurewei.alioth.controller.schema.Port.PortConfiguration.AllowAddressPairOrBuilder>(
                  allowAddressPairs_,
                  ((bitField0_ & 0x00000800) == 0x00000800),
                  getParentForChildren(),
                  isClean());
          allowAddressPairs_ = null;
        }
        return allowAddressPairsBuilder_;
      }

      private java.util.List<com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption> extraDhcpOptions_ =
        java.util.Collections.emptyList();
      private void ensureExtraDhcpOptionsIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          extraDhcpOptions_ = new java.util.ArrayList<com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption>(extraDhcpOptions_);
          bitField0_ |= 0x00001000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption, com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption.Builder, com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOptionOrBuilder> extraDhcpOptionsBuilder_;

      /**
       * <code>repeated .aliothcontroller.PortConfiguration.ExtraDhcpOption extra_dhcp_options = 13;</code>
       */
      public java.util.List<com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption> getExtraDhcpOptionsList() {
        if (extraDhcpOptionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(extraDhcpOptions_);
        } else {
          return extraDhcpOptionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.ExtraDhcpOption extra_dhcp_options = 13;</code>
       */
      public int getExtraDhcpOptionsCount() {
        if (extraDhcpOptionsBuilder_ == null) {
          return extraDhcpOptions_.size();
        } else {
          return extraDhcpOptionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.ExtraDhcpOption extra_dhcp_options = 13;</code>
       */
      public com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption getExtraDhcpOptions(int index) {
        if (extraDhcpOptionsBuilder_ == null) {
          return extraDhcpOptions_.get(index);
        } else {
          return extraDhcpOptionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.ExtraDhcpOption extra_dhcp_options = 13;</code>
       */
      public Builder setExtraDhcpOptions(
          int index, com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption value) {
        if (extraDhcpOptionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExtraDhcpOptionsIsMutable();
          extraDhcpOptions_.set(index, value);
          onChanged();
        } else {
          extraDhcpOptionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.ExtraDhcpOption extra_dhcp_options = 13;</code>
       */
      public Builder setExtraDhcpOptions(
          int index, com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption.Builder builderForValue) {
        if (extraDhcpOptionsBuilder_ == null) {
          ensureExtraDhcpOptionsIsMutable();
          extraDhcpOptions_.set(index, builderForValue.build());
          onChanged();
        } else {
          extraDhcpOptionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.ExtraDhcpOption extra_dhcp_options = 13;</code>
       */
      public Builder addExtraDhcpOptions(com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption value) {
        if (extraDhcpOptionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExtraDhcpOptionsIsMutable();
          extraDhcpOptions_.add(value);
          onChanged();
        } else {
          extraDhcpOptionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.ExtraDhcpOption extra_dhcp_options = 13;</code>
       */
      public Builder addExtraDhcpOptions(
          int index, com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption value) {
        if (extraDhcpOptionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExtraDhcpOptionsIsMutable();
          extraDhcpOptions_.add(index, value);
          onChanged();
        } else {
          extraDhcpOptionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.ExtraDhcpOption extra_dhcp_options = 13;</code>
       */
      public Builder addExtraDhcpOptions(
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption.Builder builderForValue) {
        if (extraDhcpOptionsBuilder_ == null) {
          ensureExtraDhcpOptionsIsMutable();
          extraDhcpOptions_.add(builderForValue.build());
          onChanged();
        } else {
          extraDhcpOptionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.ExtraDhcpOption extra_dhcp_options = 13;</code>
       */
      public Builder addExtraDhcpOptions(
          int index, com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption.Builder builderForValue) {
        if (extraDhcpOptionsBuilder_ == null) {
          ensureExtraDhcpOptionsIsMutable();
          extraDhcpOptions_.add(index, builderForValue.build());
          onChanged();
        } else {
          extraDhcpOptionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.ExtraDhcpOption extra_dhcp_options = 13;</code>
       */
      public Builder addAllExtraDhcpOptions(
          java.lang.Iterable<? extends com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption> values) {
        if (extraDhcpOptionsBuilder_ == null) {
          ensureExtraDhcpOptionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, extraDhcpOptions_);
          onChanged();
        } else {
          extraDhcpOptionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.ExtraDhcpOption extra_dhcp_options = 13;</code>
       */
      public Builder clearExtraDhcpOptions() {
        if (extraDhcpOptionsBuilder_ == null) {
          extraDhcpOptions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
          onChanged();
        } else {
          extraDhcpOptionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.ExtraDhcpOption extra_dhcp_options = 13;</code>
       */
      public Builder removeExtraDhcpOptions(int index) {
        if (extraDhcpOptionsBuilder_ == null) {
          ensureExtraDhcpOptionsIsMutable();
          extraDhcpOptions_.remove(index);
          onChanged();
        } else {
          extraDhcpOptionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.ExtraDhcpOption extra_dhcp_options = 13;</code>
       */
      public com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption.Builder getExtraDhcpOptionsBuilder(
          int index) {
        return getExtraDhcpOptionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.ExtraDhcpOption extra_dhcp_options = 13;</code>
       */
      public com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOptionOrBuilder getExtraDhcpOptionsOrBuilder(
          int index) {
        if (extraDhcpOptionsBuilder_ == null) {
          return extraDhcpOptions_.get(index);  } else {
          return extraDhcpOptionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.ExtraDhcpOption extra_dhcp_options = 13;</code>
       */
      public java.util.List<? extends com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOptionOrBuilder> 
           getExtraDhcpOptionsOrBuilderList() {
        if (extraDhcpOptionsBuilder_ != null) {
          return extraDhcpOptionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(extraDhcpOptions_);
        }
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.ExtraDhcpOption extra_dhcp_options = 13;</code>
       */
      public com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption.Builder addExtraDhcpOptionsBuilder() {
        return getExtraDhcpOptionsFieldBuilder().addBuilder(
            com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption.getDefaultInstance());
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.ExtraDhcpOption extra_dhcp_options = 13;</code>
       */
      public com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption.Builder addExtraDhcpOptionsBuilder(
          int index) {
        return getExtraDhcpOptionsFieldBuilder().addBuilder(
            index, com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption.getDefaultInstance());
      }
      /**
       * <code>repeated .aliothcontroller.PortConfiguration.ExtraDhcpOption extra_dhcp_options = 13;</code>
       */
      public java.util.List<com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption.Builder> 
           getExtraDhcpOptionsBuilderList() {
        return getExtraDhcpOptionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption, com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption.Builder, com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOptionOrBuilder> 
          getExtraDhcpOptionsFieldBuilder() {
        if (extraDhcpOptionsBuilder_ == null) {
          extraDhcpOptionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption, com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOption.Builder, com.futurewei.alioth.controller.schema.Port.PortConfiguration.ExtraDhcpOptionOrBuilder>(
                  extraDhcpOptions_,
                  ((bitField0_ & 0x00001000) == 0x00001000),
                  getParentForChildren(),
                  isClean());
          extraDhcpOptions_ = null;
        }
        return extraDhcpOptionsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:aliothcontroller.PortConfiguration)
    }

    // @@protoc_insertion_point(class_scope:aliothcontroller.PortConfiguration)
    private static final com.futurewei.alioth.controller.schema.Port.PortConfiguration DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futurewei.alioth.controller.schema.Port.PortConfiguration();
    }

    public static com.futurewei.alioth.controller.schema.Port.PortConfiguration getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PortConfiguration>
        PARSER = new com.google.protobuf.AbstractParser<PortConfiguration>() {
      public PortConfiguration parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PortConfiguration(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PortConfiguration> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PortConfiguration> getParserForType() {
      return PARSER;
    }

    public com.futurewei.alioth.controller.schema.Port.PortConfiguration getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PortStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:aliothcontroller.PortState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .aliothcontroller.OperationType operation_type = 1;</code>
     */
    int getOperationTypeValue();
    /**
     * <code>optional .aliothcontroller.OperationType operation_type = 1;</code>
     */
    com.futurewei.alioth.controller.schema.Common.OperationType getOperationType();

    /**
     * <code>optional .aliothcontroller.PortConfiguration configuration = 2;</code>
     */
    boolean hasConfiguration();
    /**
     * <code>optional .aliothcontroller.PortConfiguration configuration = 2;</code>
     */
    com.futurewei.alioth.controller.schema.Port.PortConfiguration getConfiguration();
    /**
     * <code>optional .aliothcontroller.PortConfiguration configuration = 2;</code>
     */
    com.futurewei.alioth.controller.schema.Port.PortConfigurationOrBuilder getConfigurationOrBuilder();
  }
  /**
   * Protobuf type {@code aliothcontroller.PortState}
   */
  public  static final class PortState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:aliothcontroller.PortState)
      PortStateOrBuilder {
    // Use PortState.newBuilder() to construct.
    private PortState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PortState() {
      operationType_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PortState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              operationType_ = rawValue;
              break;
            }
            case 18: {
              com.futurewei.alioth.controller.schema.Port.PortConfiguration.Builder subBuilder = null;
              if (configuration_ != null) {
                subBuilder = configuration_.toBuilder();
              }
              configuration_ = input.readMessage(com.futurewei.alioth.controller.schema.Port.PortConfiguration.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(configuration_);
                configuration_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortState_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futurewei.alioth.controller.schema.Port.PortState.class, com.futurewei.alioth.controller.schema.Port.PortState.Builder.class);
    }

    public static final int OPERATION_TYPE_FIELD_NUMBER = 1;
    private int operationType_;
    /**
     * <code>optional .aliothcontroller.OperationType operation_type = 1;</code>
     */
    public int getOperationTypeValue() {
      return operationType_;
    }
    /**
     * <code>optional .aliothcontroller.OperationType operation_type = 1;</code>
     */
    public com.futurewei.alioth.controller.schema.Common.OperationType getOperationType() {
      com.futurewei.alioth.controller.schema.Common.OperationType result = com.futurewei.alioth.controller.schema.Common.OperationType.valueOf(operationType_);
      return result == null ? com.futurewei.alioth.controller.schema.Common.OperationType.UNRECOGNIZED : result;
    }

    public static final int CONFIGURATION_FIELD_NUMBER = 2;
    private com.futurewei.alioth.controller.schema.Port.PortConfiguration configuration_;
    /**
     * <code>optional .aliothcontroller.PortConfiguration configuration = 2;</code>
     */
    public boolean hasConfiguration() {
      return configuration_ != null;
    }
    /**
     * <code>optional .aliothcontroller.PortConfiguration configuration = 2;</code>
     */
    public com.futurewei.alioth.controller.schema.Port.PortConfiguration getConfiguration() {
      return configuration_ == null ? com.futurewei.alioth.controller.schema.Port.PortConfiguration.getDefaultInstance() : configuration_;
    }
    /**
     * <code>optional .aliothcontroller.PortConfiguration configuration = 2;</code>
     */
    public com.futurewei.alioth.controller.schema.Port.PortConfigurationOrBuilder getConfigurationOrBuilder() {
      return getConfiguration();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (operationType_ != com.futurewei.alioth.controller.schema.Common.OperationType.CREATE.getNumber()) {
        output.writeEnum(1, operationType_);
      }
      if (configuration_ != null) {
        output.writeMessage(2, getConfiguration());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (operationType_ != com.futurewei.alioth.controller.schema.Common.OperationType.CREATE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, operationType_);
      }
      if (configuration_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getConfiguration());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futurewei.alioth.controller.schema.Port.PortState)) {
        return super.equals(obj);
      }
      com.futurewei.alioth.controller.schema.Port.PortState other = (com.futurewei.alioth.controller.schema.Port.PortState) obj;

      boolean result = true;
      result = result && operationType_ == other.operationType_;
      result = result && (hasConfiguration() == other.hasConfiguration());
      if (hasConfiguration()) {
        result = result && getConfiguration()
            .equals(other.getConfiguration());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + OPERATION_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + operationType_;
      if (hasConfiguration()) {
        hash = (37 * hash) + CONFIGURATION_FIELD_NUMBER;
        hash = (53 * hash) + getConfiguration().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futurewei.alioth.controller.schema.Port.PortState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futurewei.alioth.controller.schema.Port.PortState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futurewei.alioth.controller.schema.Port.PortState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futurewei.alioth.controller.schema.Port.PortState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futurewei.alioth.controller.schema.Port.PortState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futurewei.alioth.controller.schema.Port.PortState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futurewei.alioth.controller.schema.Port.PortState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futurewei.alioth.controller.schema.Port.PortState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futurewei.alioth.controller.schema.Port.PortState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futurewei.alioth.controller.schema.Port.PortState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futurewei.alioth.controller.schema.Port.PortState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code aliothcontroller.PortState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:aliothcontroller.PortState)
        com.futurewei.alioth.controller.schema.Port.PortStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortState_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futurewei.alioth.controller.schema.Port.PortState.class, com.futurewei.alioth.controller.schema.Port.PortState.Builder.class);
      }

      // Construct using com.futurewei.alioth.controller.schema.Port.PortState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        operationType_ = 0;

        if (configurationBuilder_ == null) {
          configuration_ = null;
        } else {
          configuration_ = null;
          configurationBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futurewei.alioth.controller.schema.Port.internal_static_aliothcontroller_PortState_descriptor;
      }

      public com.futurewei.alioth.controller.schema.Port.PortState getDefaultInstanceForType() {
        return com.futurewei.alioth.controller.schema.Port.PortState.getDefaultInstance();
      }

      public com.futurewei.alioth.controller.schema.Port.PortState build() {
        com.futurewei.alioth.controller.schema.Port.PortState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futurewei.alioth.controller.schema.Port.PortState buildPartial() {
        com.futurewei.alioth.controller.schema.Port.PortState result = new com.futurewei.alioth.controller.schema.Port.PortState(this);
        result.operationType_ = operationType_;
        if (configurationBuilder_ == null) {
          result.configuration_ = configuration_;
        } else {
          result.configuration_ = configurationBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futurewei.alioth.controller.schema.Port.PortState) {
          return mergeFrom((com.futurewei.alioth.controller.schema.Port.PortState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futurewei.alioth.controller.schema.Port.PortState other) {
        if (other == com.futurewei.alioth.controller.schema.Port.PortState.getDefaultInstance()) return this;
        if (other.operationType_ != 0) {
          setOperationTypeValue(other.getOperationTypeValue());
        }
        if (other.hasConfiguration()) {
          mergeConfiguration(other.getConfiguration());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futurewei.alioth.controller.schema.Port.PortState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futurewei.alioth.controller.schema.Port.PortState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int operationType_ = 0;
      /**
       * <code>optional .aliothcontroller.OperationType operation_type = 1;</code>
       */
      public int getOperationTypeValue() {
        return operationType_;
      }
      /**
       * <code>optional .aliothcontroller.OperationType operation_type = 1;</code>
       */
      public Builder setOperationTypeValue(int value) {
        operationType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .aliothcontroller.OperationType operation_type = 1;</code>
       */
      public com.futurewei.alioth.controller.schema.Common.OperationType getOperationType() {
        com.futurewei.alioth.controller.schema.Common.OperationType result = com.futurewei.alioth.controller.schema.Common.OperationType.valueOf(operationType_);
        return result == null ? com.futurewei.alioth.controller.schema.Common.OperationType.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .aliothcontroller.OperationType operation_type = 1;</code>
       */
      public Builder setOperationType(com.futurewei.alioth.controller.schema.Common.OperationType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        operationType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .aliothcontroller.OperationType operation_type = 1;</code>
       */
      public Builder clearOperationType() {
        
        operationType_ = 0;
        onChanged();
        return this;
      }

      private com.futurewei.alioth.controller.schema.Port.PortConfiguration configuration_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futurewei.alioth.controller.schema.Port.PortConfiguration, com.futurewei.alioth.controller.schema.Port.PortConfiguration.Builder, com.futurewei.alioth.controller.schema.Port.PortConfigurationOrBuilder> configurationBuilder_;
      /**
       * <code>optional .aliothcontroller.PortConfiguration configuration = 2;</code>
       */
      public boolean hasConfiguration() {
        return configurationBuilder_ != null || configuration_ != null;
      }
      /**
       * <code>optional .aliothcontroller.PortConfiguration configuration = 2;</code>
       */
      public com.futurewei.alioth.controller.schema.Port.PortConfiguration getConfiguration() {
        if (configurationBuilder_ == null) {
          return configuration_ == null ? com.futurewei.alioth.controller.schema.Port.PortConfiguration.getDefaultInstance() : configuration_;
        } else {
          return configurationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .aliothcontroller.PortConfiguration configuration = 2;</code>
       */
      public Builder setConfiguration(com.futurewei.alioth.controller.schema.Port.PortConfiguration value) {
        if (configurationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          configuration_ = value;
          onChanged();
        } else {
          configurationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .aliothcontroller.PortConfiguration configuration = 2;</code>
       */
      public Builder setConfiguration(
          com.futurewei.alioth.controller.schema.Port.PortConfiguration.Builder builderForValue) {
        if (configurationBuilder_ == null) {
          configuration_ = builderForValue.build();
          onChanged();
        } else {
          configurationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .aliothcontroller.PortConfiguration configuration = 2;</code>
       */
      public Builder mergeConfiguration(com.futurewei.alioth.controller.schema.Port.PortConfiguration value) {
        if (configurationBuilder_ == null) {
          if (configuration_ != null) {
            configuration_ =
              com.futurewei.alioth.controller.schema.Port.PortConfiguration.newBuilder(configuration_).mergeFrom(value).buildPartial();
          } else {
            configuration_ = value;
          }
          onChanged();
        } else {
          configurationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .aliothcontroller.PortConfiguration configuration = 2;</code>
       */
      public Builder clearConfiguration() {
        if (configurationBuilder_ == null) {
          configuration_ = null;
          onChanged();
        } else {
          configuration_ = null;
          configurationBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .aliothcontroller.PortConfiguration configuration = 2;</code>
       */
      public com.futurewei.alioth.controller.schema.Port.PortConfiguration.Builder getConfigurationBuilder() {
        
        onChanged();
        return getConfigurationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .aliothcontroller.PortConfiguration configuration = 2;</code>
       */
      public com.futurewei.alioth.controller.schema.Port.PortConfigurationOrBuilder getConfigurationOrBuilder() {
        if (configurationBuilder_ != null) {
          return configurationBuilder_.getMessageOrBuilder();
        } else {
          return configuration_ == null ?
              com.futurewei.alioth.controller.schema.Port.PortConfiguration.getDefaultInstance() : configuration_;
        }
      }
      /**
       * <code>optional .aliothcontroller.PortConfiguration configuration = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futurewei.alioth.controller.schema.Port.PortConfiguration, com.futurewei.alioth.controller.schema.Port.PortConfiguration.Builder, com.futurewei.alioth.controller.schema.Port.PortConfigurationOrBuilder> 
          getConfigurationFieldBuilder() {
        if (configurationBuilder_ == null) {
          configurationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.futurewei.alioth.controller.schema.Port.PortConfiguration, com.futurewei.alioth.controller.schema.Port.PortConfiguration.Builder, com.futurewei.alioth.controller.schema.Port.PortConfigurationOrBuilder>(
                  getConfiguration(),
                  getParentForChildren(),
                  isClean());
          configuration_ = null;
        }
        return configurationBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:aliothcontroller.PortState)
    }

    // @@protoc_insertion_point(class_scope:aliothcontroller.PortState)
    private static final com.futurewei.alioth.controller.schema.Port.PortState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futurewei.alioth.controller.schema.Port.PortState();
    }

    public static com.futurewei.alioth.controller.schema.Port.PortState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PortState>
        PARSER = new com.google.protobuf.AbstractParser<PortState>() {
      public PortState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PortState(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PortState> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PortState> getParserForType() {
      return PARSER;
    }

    public com.futurewei.alioth.controller.schema.Port.PortState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aliothcontroller_PortConfiguration_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aliothcontroller_PortConfiguration_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aliothcontroller_PortConfiguration_HostInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aliothcontroller_PortConfiguration_HostInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aliothcontroller_PortConfiguration_FixedIp_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aliothcontroller_PortConfiguration_FixedIp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aliothcontroller_PortConfiguration_SecurityGroupId_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aliothcontroller_PortConfiguration_SecurityGroupId_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aliothcontroller_PortConfiguration_AllowAddressPair_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aliothcontroller_PortConfiguration_AllowAddressPair_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aliothcontroller_PortConfiguration_ExtraDhcpOption_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aliothcontroller_PortConfiguration_ExtraDhcpOption_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aliothcontroller_PortState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aliothcontroller_PortState_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\nport.proto\022\020aliothcontroller\032\014common.p" +
      "roto\"\217\006\n\021PortConfiguration\022\017\n\007version\030\001 " +
      "\001(\005\022\022\n\nproject_id\030\002 \001(\t\022\022\n\nnetwork_id\030\003 " +
      "\001(\t\022\n\n\002id\030\004 \001(\t\022\014\n\004name\030\005 \001(\t\022\026\n\016admin_s" +
      "tate_up\030\006 \001(\010\022\023\n\013mac_address\030\007 \001(\t\022\021\n\tve" +
      "th_name\030\010 \001(\t\022?\n\thost_info\030\t \001(\0132,.aliot" +
      "hcontroller.PortConfiguration.HostInfo\022>" +
      "\n\tfixed_ips\030\n \003(\0132+.aliothcontroller.Por" +
      "tConfiguration.FixedIp\022O\n\022security_group" +
      "_ids\030\013 \003(\01323.aliothcontroller.PortConfig",
      "uration.SecurityGroupId\022Q\n\023allow_address" +
      "_pairs\030\014 \003(\01324.aliothcontroller.PortConf" +
      "iguration.AllowAddressPair\022O\n\022extra_dhcp" +
      "_options\030\r \003(\01323.aliothcontroller.PortCo" +
      "nfiguration.ExtraDhcpOption\0323\n\010HostInfo\022" +
      "\022\n\nip_address\030\001 \001(\t\022\023\n\013mac_address\030\002 \001(\t" +
      "\0320\n\007FixedIp\022\021\n\tsubnet_id\030\001 \001(\t\022\022\n\nip_add" +
      "ress\030\002 \001(\t\032\035\n\017SecurityGroupId\022\n\n\002id\030\001 \001(" +
      "\t\032;\n\020AllowAddressPair\022\022\n\nip_address\030\001 \001(" +
      "\t\022\023\n\013mac_address\030\002 \001(\t\032.\n\017ExtraDhcpOptio",
      "n\022\014\n\004name\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\"\200\001\n\tPortS" +
      "tate\0227\n\016operation_type\030\001 \001(\0162\037.aliothcon" +
      "troller.OperationType\022:\n\rconfiguration\030\002" +
      " \001(\0132#.aliothcontroller.PortConfiguratio" +
      "nB.\n&com.futurewei.alioth.controller.sch" +
      "emaB\004Portb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.futurewei.alioth.controller.schema.Common.getDescriptor(),
        }, assigner);
    internal_static_aliothcontroller_PortConfiguration_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_aliothcontroller_PortConfiguration_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aliothcontroller_PortConfiguration_descriptor,
        new java.lang.String[] { "Version", "ProjectId", "NetworkId", "Id", "Name", "AdminStateUp", "MacAddress", "VethName", "HostInfo", "FixedIps", "SecurityGroupIds", "AllowAddressPairs", "ExtraDhcpOptions", });
    internal_static_aliothcontroller_PortConfiguration_HostInfo_descriptor =
      internal_static_aliothcontroller_PortConfiguration_descriptor.getNestedTypes().get(0);
    internal_static_aliothcontroller_PortConfiguration_HostInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aliothcontroller_PortConfiguration_HostInfo_descriptor,
        new java.lang.String[] { "IpAddress", "MacAddress", });
    internal_static_aliothcontroller_PortConfiguration_FixedIp_descriptor =
      internal_static_aliothcontroller_PortConfiguration_descriptor.getNestedTypes().get(1);
    internal_static_aliothcontroller_PortConfiguration_FixedIp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aliothcontroller_PortConfiguration_FixedIp_descriptor,
        new java.lang.String[] { "SubnetId", "IpAddress", });
    internal_static_aliothcontroller_PortConfiguration_SecurityGroupId_descriptor =
      internal_static_aliothcontroller_PortConfiguration_descriptor.getNestedTypes().get(2);
    internal_static_aliothcontroller_PortConfiguration_SecurityGroupId_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aliothcontroller_PortConfiguration_SecurityGroupId_descriptor,
        new java.lang.String[] { "Id", });
    internal_static_aliothcontroller_PortConfiguration_AllowAddressPair_descriptor =
      internal_static_aliothcontroller_PortConfiguration_descriptor.getNestedTypes().get(3);
    internal_static_aliothcontroller_PortConfiguration_AllowAddressPair_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aliothcontroller_PortConfiguration_AllowAddressPair_descriptor,
        new java.lang.String[] { "IpAddress", "MacAddress", });
    internal_static_aliothcontroller_PortConfiguration_ExtraDhcpOption_descriptor =
      internal_static_aliothcontroller_PortConfiguration_descriptor.getNestedTypes().get(4);
    internal_static_aliothcontroller_PortConfiguration_ExtraDhcpOption_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aliothcontroller_PortConfiguration_ExtraDhcpOption_descriptor,
        new java.lang.String[] { "Name", "Value", });
    internal_static_aliothcontroller_PortState_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_aliothcontroller_PortState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aliothcontroller_PortState_descriptor,
        new java.lang.String[] { "OperationType", "Configuration", });
    com.futurewei.alioth.controller.schema.Common.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
