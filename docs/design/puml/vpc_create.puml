' Copyright 2019 The Alcor Authors.

' Licensed under the Apache License, Version 2.0 (the "License");
'        you may not use this file except in compliance with the License.
'        You may obtain a copy of the License at

'        http://www.apache.org/licenses/LICENSE-2.0

'        Unless required by applicable law or agreed to in writing, software
'        distributed under the License is distributed on an "AS IS" BASIS,
'        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
'        See the License for the specific language governing permissions and
'        limitations under the License.

@startuml

title Workflow of VPC/Network

skinparam monochrome true
collections API_Gateway
collections VPC_Manager
collections Subnet_Manager
collections Port_Manager
collections Route_Manager
collections Private_IP_Manager
collections Mac_Manager
collections Data_Plane_Manager
collections Node_Manager
collections Hosts

==Get a VPC/Network==
autonumber
rnote over API_Gateway: ==GET /project/{project_id}/networks
API_Gateway -> API_Gateway: Authentication, authorization,\nand throttling
API_Gateway -> VPC_Manager: Get a VPC state
VPC_Manager -> VPC_Manager: Query Database by VPC ID
VPC_Manager -> API_Gateway: Return VPC state

==Create a VPC/Network==
autonumber
rnote over API_Gateway: ==POST /project/{project_id}/networks
API_Gateway -> API_Gateway: Authentication, authorization,\nand throttling
API_Gateway -> VPC_Manager: Create a VPC
VPC_Manager -> VPC_Manager: Assign uuid, and allocate network\nsegment based on network type
VPC_Manager -> Route_Manager: Create default route rules
Route_Manager -> VPC_Manager: Allocate/return default route\nrules (IPv4/6)
VPC_Manager -> API_Gateway: Persist vpc states and return

==Update a VPC/Network==
autonumber
rnote over API_Gateway: ==PUT /project/{project_id}/networks
API_Gateway -> API_Gateway: Authentication, authorization,\nand throttling
API_Gateway -> VPC_Manager: Create a VPC
VPC_Manager -> VPC_Manager: Assign uuid, and allocate network\nsegment based on network type
VPC_Manager -> Route_Manager: Create default route rules
Route_Manager -> VPC_Manager: Allocate/return default route\nrules (IPv4/6)
VPC_Manager -> API_Gateway: Persist vpc states and return

==Delete a VPC/Network==
autonumber
rnote over API_Gateway: ==DELETE /project/{project_id}/networks
API_Gateway -> API_Gateway: Authentication, authorization,\nand throttling
API_Gateway -> VPC_Manager: Create a VPC
VPC_Manager -> VPC_Manager: Assign uuid, and allocate network\nsegment based on network type
VPC_Manager -> Route_Manager: Create default route rules
Route_Manager -> VPC_Manager: Allocate/return default route\nrules (IPv4/6)
VPC_Manager -> API_Gateway: Persist vpc states and return

@enduml
