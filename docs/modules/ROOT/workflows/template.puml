'MIT License
'Copyright(c) 2020 Futurewei Cloud
'
'    Permission is hereby granted,
'    free of charge, to any person obtaining a copy of this software and associated documentation files(the "Software"), to deal in the Software without restriction,
'    including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and / or sell copies of the Software, and to permit persons
'    to whom the Software is furnished to do so, subject to the following conditions:
'
'    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
'
'    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
'    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
'    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

@startuml

skinparam sequence {
    ArrowColor DeepSkyBlue
    ActorBorderColor DeepSkyBlue
    LifeLineBorderColor blue
    LifeLineBackgroundColor #A9DCDF

    ActorBackgroundColor aqua
    ActorFontColor DeepSkyBlue
    ActorFontSize 17
    ActorFontName Aapex

    CollectionsBorderColor #ff0000
    CollectionsBackgroundColor DodgerBlue

    ParticipantBorderColor DeepSkyBlue
    ParticipantBackgroundColor DodgerBlue
    ParticipantFontName Impact
    ParticipantFontSize 17
    ParticipantFontColor #A9DCDF
}

skinparam monochrome true
autonumber
collections API_Gateway
collections VPC_Manager
collections Subnet_Manager
collections Port_Manager
collections Route_Manager
collections Private_IP_Manager
collections Mac_Manager
collections Data_Plane_Manager
collections Node_Manager
collections Hosts

==Create a VPC/Network==
rnote over API_Gateway: ==Post /project/{project_id}/networks
API_Gateway -> API_Gateway: Authentication, authorization, throttling
API_Gateway -> VPC_Manager: Create a VPC
VPC_Manager -> VPC_Manager: Assign uuid, and allocate segment
VPC_Manager -> Route_Manager: Create default route rules
Route_Manager -> VPC_Manager: Allocate/return default route rules (IPv4/6)
VPC_Manager -> API_Gateway: Persist vpc states and return

@enduml