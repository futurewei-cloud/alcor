' Copyright 2019 The Alcor Authors.

' Licensed under the Apache License, Version 2.0 (the "License");
'        you may not use this file except in compliance with the License.
'        You may obtain a copy of the License at

'        http://www.apache.org/licenses/LICENSE-2.0

'        Unless required by applicable law or agreed to in writing, software
'        distributed under the License is distributed on an "AS IS" BASIS,
'        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
'        See the License for the specific language governing permissions and
'        limitations under the License.

@startuml

title Southbound Workflow of Port Provisioning - v1

skinparam monochrome true
collections "Port Manager" as pm
collections "Data Plane Manager" as dpm
'collections "Message Queue" as mq
participant "ACA@Host 1" as host1
participant "ACA@Host 2" as host2
participant "ACA@Host 3" as host3

==Scenario A: Create the first Port P1 at Host 1==
autonumber "<b>[0]"
pm -> dpm: POST /port async with RequestBody NetworkConfiguration={\n\t[P1 w/ neighbor_info=NULL],[Subnet],[VPC],[SG]}
activate dpm
dpm -> host1: Send a GoalState message {[(P1,CREATE)],[(Subnet,INFO)]} via gPRC
activate host1
host1 -> dpm: Reply a GoalStateOperationReply message on P1 programming status
deactivate host1
dpm -> pm: Reply an InternalProgrammingStatus message on P1 programming status
deactivate dpm

==Create the second Port P2 at Host 1==
autonumber 5 "<b>[0]"
pm -> dpm: POST /port async with RequestBody NetworkConfiguration={\n\t[P2 w/ neighbor_info=NULL],[Subnet],[VPC],[SG]}
activate dpm

dpm -> host1: Send a GoalState message \n{[(P2,CREATE)],[(Subnet,INFO)]} via gPRC
activate host1
host1 -> dpm: Reply a GoalStateOperationReply message on P2 programming status
deactivate host1

dpm -> pm: Once receiving response from Host1, reply an InternalProgrammingStatus\nmessage on P2 programming status
deactivate dpm
==================================================

==Scenario B: Create Ports (P1, P2) at Host 1==
autonumber "<b>[0]"
pm -> dpm: POST /port async with RequestBody NetworkConfiguration={\n\t[P1,P2 w/ neighbor_info=NULL],[Subnet],[VPC],[SG]}
activate dpm

autonumber 2 "<b>[0]"
dpm -> host1: Send a GoalState message \n{[(P1,CREATE),(P2,CREATE)],[(Subnet,INFO)]} via gPRC
activate host1
host1 -> dpm: Reply a GoalStateOperationReply message on P1 and P2 programming status
deactivate host1

autonumber 4 "<b>[0]"
dpm -> pm: After receiving response from Host1 and Host2, reply an InternalProgrammingStatus\nmessage on P2 programming status
deactivate dpm


==Scenario C: Create the first Port P1 at Host 1==
autonumber "<b>[0]"
pm -> dpm: POST /port async with RequestBody NetworkConfiguration={\n\t[P1 w/ neighbor_info=NULL],[Subnet],[VPC],[SG]}
activate dpm
dpm -> host1: Send a GoalState message {[(P1,CREATE)],[(Subnet,INFO)]} via gPRC
activate host1
host1 -> dpm: Reply a GoalStateOperationReply message on P1 programming status
deactivate host1
dpm -> pm: Reply an InternalProgrammingStatus message on P1 programming status
deactivate dpm

==Create the second Port P2 at Host 2==
autonumber 5 "<b>[0]"
pm -> dpm: POST /port async with RequestBody NetworkConfiguration={\n\t[P2 w/ neighbor_info=[P1]],[Subnet],[VPC],[SG]}
activate dpm

autonumber 6 "<b>[0.a]"
dpm -> host2: Send a GoalState message \n{[(P2,CREATE),(P1,NEIGHBOR_CREATE_UPDATE)],[(Subnet,INFO)]} via gPRC
activate host2
host2 -> dpm: Reply a GoalStateOperationReply message on P2 programming status
deactivate host2

autonumber 6 "<b>[0.b]"
dpm -> host1: Send a GoalState message \n{[(P2,NEIGHBOR_CREATE_UPDATE)],[(Subnet,INFO)]} via gPRC
activate host1
host1 -> dpm: Reply a GoalStateOperationReply message on P2 programming status
deactivate host1

autonumber 8 "<b>[0]"
dpm -> pm: After receiving response from Host1 and Host2, reply an InternalProgrammingStatus\nmessage on P2 programming status
deactivate dpm
==================================================

==Scenario D: Create Ports (P1, P2) at Host 1, (P3, P4) at Host 2==
autonumber "<b>[0]"
pm -> dpm: POST /port async with RequestBody NetworkConfiguration=\n\t{[P1,P2,P3,P4 w/ neighbor_info=NULL],[Subnet],[VPC],[SG]}
activate dpm

autonumber 2 "<b>[0.a]"
dpm -> host1: Send a GoalState message \n{[(P1,CREATE),(P2,CREATE),(P3,NEIGHBOR_CREATE_UPDATE),\n(P4,NEIGHBOR_CREATE_UPDATE)],[(Subnet,INFO)]} via gPRC
activate host1
host1 -> dpm: Reply a GoalStateOperationReply message on P1 and P2 programming status
deactivate host1

autonumber 2 "<b>[0.b]"
dpm -> host2: Send a GoalState message \n{[(P3,CREATE),(P4,CREATE),(P1,NEIGHBOR_CREATE_UPDATE),\n(P2,NEIGHBOR_CREATE_UPDATE)],[(Subnet,INFO)]} via gPRC
activate host2
host2 -> dpm: Reply a GoalStateOperationReply message on P3 and P4 programming status
deactivate host2

autonumber 4 "<b>[0]"
dpm -> pm: After receiving response from Host1 and Host2, reply an InternalProgrammingStatus\nmessage on P1..4 programming status
deactivate dpm

==================================================

==Scenario E: Create Ports (P1, P2) at Host 1, (P3, P4) at Host 2\nP0 is already on Host 1==
autonumber "<b>[0]"
pm -> dpm: POST /port async with RequestBody NetworkConfiguration={\n\t[P1,P2,P3,P4 each w/ neighbor_info=[P0]],[Subnet],[VPC],[SG]}
activate dpm

autonumber 2 "<b>[0.a]"
dpm -> host1: Send a GoalState message \n{[(P1,CREATE),(P2,CREATE),(P3,NEIGHBOR_CREATE_UPDATE),\n(P4,NEIGHBOR_CREATE_UPDATE)],[(Subnet,INFO)]} via gPRC
activate host1
host1 -> dpm: Reply a GoalStateOperationReply message on P1 and P2 programming status
deactivate host1

autonumber 2 "<b>[0.b]"
dpm -> host2: Send a GoalState message \n{[(P3,CREATE),(P4,CREATE),(P0,NEIGHBOR_CREATE_UPDATE),(P1,NEIGHBOR_CREATE_UPDATE),\n(P2,NEIGHBOR_CREATE_UPDATE)],[(Subnet,INFO)]} via gPRC
activate host2
host2 -> dpm: Reply a GoalStateOperationReply message on P3 and P4 programming status
deactivate host2

autonumber 4 "<b>[0]"
dpm -> pm: After receiving response from Host1 and Host2, reply an InternalProgrammingStatus\nmessage on P1..4 programming status
deactivate dpm

==================================================

==Scenario F: Create Ports (P2, P3) at Host 1, (P4, P5) at Host 2\nP0 is already on Host 1, P1 is in Host 3 ==
autonumber "<b>[0]"
pm -> dpm: POST /port async with RequestBody NetworkConfiguration={\n\t[P2,P3 each w/ neighbor_info=[P1],\n\tP4,P5 each w/ neighbor_info=[P0,P1]],\n\t[Subnet],[VPC],[SG]}
activate dpm

autonumber 2 "<b>[0.a]"
dpm -> host1: Send a GoalState message \n{[(P2,CREATE),(P3,CREATE),(P4,NEIGHBOR_CREATE_UPDATE),\n(P5,NEIGHBOR_CREATE_UPDATE),(P1,NEIGHBOR_CREATE_UPDATE)],[(Subnet,INFO)]} via gPRC
activate host1
host1 -> dpm: Reply a GoalStateOperationReply message on P2 and P3 programming status
deactivate host1

autonumber 2 "<b>[0.b]"
dpm -> host2: Send a GoalState message \n{[(P4,CREATE),(P5,CREATE),(P2,NEIGHBOR_CREATE_UPDATE),(P3,NEIGHBOR_CREATE_UPDATE),\n(P0,NEIGHBOR_CREATE_UPDATE),(P1,NEIGHBOR_CREATE_UPDATE)],[(Subnet,INFO)]} via gPRC
activate host2
host2 -> dpm: Reply a GoalStateOperationReply message on P4 and P5 programming status
deactivate host2

autonumber 2 "<b>[0.c]"
dpm -> host3: Send a GoalState message \n{[(P2,NEIGHBOR_CREATE_UPDATE),(P3,NEIGHBOR_CREATE_UPDATE),\n(P4,NEIGHBOR_CREATE_UPDATE),(P5,NEIGHBOR_CREATE_UPDATE)],[(Subnet,INFO)]} via gPRC
activate host3
host3 -> dpm: Reply a GoalStateOperationReply message on neighbor programming status
deactivate host3

autonumber 4 "<b>[0]"
dpm -> pm: After receiving response from Host1, Host2 and Host3, reply an\nInternalProgrammingStatus message on P2..5 programming status
deactivate dpm


@enduml
