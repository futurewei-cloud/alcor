' Copyright 2019 The Alcor Authors.

' Licensed under the Apache License, Version 2.0 (the "License");
'        you may not use this file except in compliance with the License.
'        You may obtain a copy of the License at

'        http://www.apache.org/licenses/LICENSE-2.0

'        Unless required by applicable law or agreed to in writing, software
'        distributed under the License is distributed on an "AS IS" BASIS,
'        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
'        See the License for the specific language governing permissions and
'        limitations under the License.

@startuml

skinparam monochrome true

actor "Customer"
collections "SG Manager"
collections "Node Manager"
collections "Port Manager"
collections "Data Plane Manager"

box "Compute Host 1" #LightBlue
participant "ACA on \n Host 1"
end box

box "Compute Host 2" #LightGreen
participant "ACA on \n Host 2"
end box

===Scenarios A: Create P1 which assoicated with SG1 and SG2, local SG rules only (no remote)==

autonumber 10
"Customer" -> "Port Manager": Create P1 and assoicated it with SG1 and SG2
"Port Manager" -> "SG Manager": Query SG1 and SG2 info for P1
"SG Manager" -> "Port Manager": Response {SG_info...)}
"Port Manager" -> "Node Manager": Get node info input: {host_id}, new port\n output: {host_ip}
"Port Manager" -> "Data Plane Manager": POST /port sync with RequestBody NetworkConfiguration=\n {[P1 port w/ L2_neighbor_Id=NULL \n L3_neighbor_Id=NULL],[Subnet],[VPC],[SG1,SG2]}
"Data Plane Manager" -> "ACA on \n Host 1": Port: CREATE (FULL) P1, DHCP: CREATE (FULL) P1,\n Subnet: INFO, [SG1, SG2]: INFO

===Scenarios B: Create P1 which assoicated with SG2, One ingress SG rules points to remote SG1==

autonumber 20
"Customer" -> "Port Manager": Create P1 assoicated with SG2
"Port Manager" -> "SG Manager": Query SG2 info for P1
"SG Manager" -> "Port Manager": Response {SG_info...)}, found one ingress SG rule points to remote SG1
"Port Manager" -> "Port Manager": Determine the list of remote ports assoicated with SG1\n only useful if they are neighbors already
"Port Manager" -> "Node Manager": Get node info input: {host_id}, new port\n output: {host_ip}
"Port Manager" -> "Data Plane Manager": POST /port sync with RequestBody NetworkConfiguration=\n {[P1 port w/ L2_neighbor_Id=P2 \n L3_neighbor_Id=P3],[Subnet],[VPC],[SG1,SG2]}
"Data Plane Manager" -> "ACA on \n Host 1": Port: CREATE (FULL) P1, DHCP: CREATE (FULL) P1,\n L2 Neighbor=P2, L3 Neighbor=P3,\n Subnet: INFO, [SG1, SG2]: INFO

===Scenarios C: No new port created, in SG1, one ingress local SG rules got added/updated/deleted (no remote)==

autonumber 30
"Customer" -> "SG Manager": Update one ingress local SG rule in SG1
"SG Manager" -> "Port Manager": Request to update all the assocated ports
"Port Manager" -> "Port Manager": Determine the list of ports assoicated with SG1
"Port Manager" -> "Node Manager": Get node info input: {host_id}, new port\n output: {host_ip}
"Port Manager" -> "Data Plane Manager": POST /port sync with RequestBody NetworkConfiguration=\n {[P1 port w/ L2_neighbor_Id=NULL \n L3_neighbor_Id=NULL],[Subnet],[VPC],[SG1]}
"Data Plane Manager" -> "ACA on \n Host 1": Port: INFO P1, [SG1]: INFO\n (particular ingress rule: added/updated/deleted)

===Scenarios D: In SG2 one ingress remote SG rules points to remote SG1, one new port P4 added to SG1==

autonumber 40
"Customer" -> "Port Manager": Create P4 assoicated with SG1
"Port Manager" -> "SG Manager": Query SG1 info for P4
"SG Manager" -> "Port Manager": Response {SG_info...)}
"Port Manager" -> "Node Manager": Get node info input: {host_id}, new port\n output: {host_ip}
"Port Manager" -> "SG Manager": Query SG2 info for P1 (because PM found P1 as L2 neighbor)
"Port Manager" -> "Data Plane Manager": POST /port sync with RequestBody NetworkConfiguration=\n {[P4 port w/ L2_neighbor_Id=P1 \n L3_neighbor_Id=NULL],[Subnet],[VPC],[SG1 for P4,SG2 for P1]}
"Data Plane Manager" -> "ACA on \n Host 2": Port: CREATE (FULL) P4 DHCP: CREATE (FULL) P4,\n L2 Neighbor=P1, L3 Neighbor=NULL,\n Subnet: INFO, [SG1,SG2]: INFO
"Data Plane Manager" -> "ACA on \n Host 1": L2 Neighbor state=P1, Subnet: INFO, [SG1]: INFO

@enduml

