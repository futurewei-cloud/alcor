/*
MIT License
Copyright(c) 2020 Futurewei Cloud

    Permission is hereby granted,
    free of charge, to any person obtaining a copy of this software and associated documentation files(the "Software"), to deal in the Software without restriction,
    including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and / or sell copies of the Software, and to permit persons
    to whom the Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
    
    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

package com.futurewei.alcor.common.constants;

public final class Common {
    private Common() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
        registerAllExtensions(
                (com.google.protobuf.ExtensionRegistryLite) registry);
    }

    /**
     * Protobuf enum {@code alcorcontroller.ResourceType}
     */
    public enum ResourceType
            implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>VPC = 0;</code>
         */
        VPC(0),
        /**
         * <code>SUBNET = 1;</code>
         */
        SUBNET(1),
        /**
         * <code>PORT = 2;</code>
         */
        PORT(2),
        /**
         * <code>SECURITYGROUP = 3;</code>
         */
        SECURITYGROUP(3),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>VPC = 0;</code>
         */
        public static final int VPC_VALUE = 0;
        /**
         * <code>SUBNET = 1;</code>
         */
        public static final int SUBNET_VALUE = 1;
        /**
         * <code>PORT = 2;</code>
         */
        public static final int PORT_VALUE = 2;
        /**
         * <code>SECURITYGROUP = 3;</code>
         */
        public static final int SECURITYGROUP_VALUE = 3;


        public final int getNumber() {
            if (this == UNRECOGNIZED) {
                throw new IllegalArgumentException(
                        "Can't get the number of an unknown enum value.");
            }
            return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @Deprecated
        public static ResourceType valueOf(int value) {
            return forNumber(value);
        }

        public static ResourceType forNumber(int value) {
            switch (value) {
                case 0:
                    return VPC;
                case 1:
                    return SUBNET;
                case 2:
                    return PORT;
                case 3:
                    return SECURITYGROUP;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<ResourceType>
        internalGetValueMap() {
            return internalValueMap;
        }

        private static final com.google.protobuf.Internal.EnumLiteMap<
                ResourceType> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<ResourceType>() {
                    public ResourceType findValueByNumber(int number) {
                        return ResourceType.forNumber(number);
                    }
                };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
            return getDescriptor().getValues().get(ordinal());
        }

        public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }

        public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
            return Common.getDescriptor().getEnumTypes().get(0);
        }

        private static final ResourceType[] VALUES = values();

        public static ResourceType valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            if (desc.getIndex() == -1) {
                return UNRECOGNIZED;
            }
            return VALUES[desc.getIndex()];
        }

        private final int value;

        private ResourceType(int value) {
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:alcorcontroller.ResourceType)
    }

    /**
     * Protobuf enum {@code alcorcontroller.OperationType}
     */
    public enum OperationType
            implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>CREATE = 0;</code>
         */
        CREATE(0),
        /**
         * <code>UPDATE = 1;</code>
         */
        UPDATE(1),
        /**
         * <code>GET = 2;</code>
         */
        GET(2),
        /**
         * <code>DELETE = 3;</code>
         */
        DELETE(3),
        /**
         * <code>INFO = 4;</code>
         */
        INFO(4),
        /**
         * <code>FINALIZE = 5;</code>
         */
        FINALIZE(5),
        /**
         * <code>CREATE_UPDATE_SWITCH = 6;</code>
         */
        CREATE_UPDATE_SWITCH(6),
        /**
         * <code>CREATE_UPDATE_ROUTER = 7;</code>
         */
        CREATE_UPDATE_ROUTER(7),
        /**
         * <code>CREATE_UPDATE_GATEWAY = 8;</code>
         */
        CREATE_UPDATE_GATEWAY(8),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>CREATE = 0;</code>
         */
        public static final int CREATE_VALUE = 0;
        /**
         * <code>UPDATE = 1;</code>
         */
        public static final int UPDATE_VALUE = 1;
        /**
         * <code>GET = 2;</code>
         */
        public static final int GET_VALUE = 2;
        /**
         * <code>DELETE = 3;</code>
         */
        public static final int DELETE_VALUE = 3;
        /**
         * <code>INFO = 4;</code>
         */
        public static final int INFO_VALUE = 4;
        /**
         * <code>FINALIZE = 5;</code>
         */
        public static final int FINALIZE_VALUE = 5;
        /**
         * <code>CREATE_UPDATE_SWITCH = 6;</code>
         */
        public static final int CREATE_UPDATE_SWITCH_VALUE = 6;
        /**
         * <code>CREATE_UPDATE_ROUTER = 7;</code>
         */
        public static final int CREATE_UPDATE_ROUTER_VALUE = 7;
        /**
         * <code>CREATE_UPDATE_GATEWAY = 8;</code>
         */
        public static final int CREATE_UPDATE_GATEWAY_VALUE = 8;


        public final int getNumber() {
            if (this == UNRECOGNIZED) {
                throw new IllegalArgumentException(
                        "Can't get the number of an unknown enum value.");
            }
            return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @Deprecated
        public static OperationType valueOf(int value) {
            return forNumber(value);
        }

        public static OperationType forNumber(int value) {
            switch (value) {
                case 0:
                    return CREATE;
                case 1:
                    return UPDATE;
                case 2:
                    return GET;
                case 3:
                    return DELETE;
                case 4:
                    return INFO;
                case 5:
                    return FINALIZE;
                case 6:
                    return CREATE_UPDATE_SWITCH;
                case 7:
                    return CREATE_UPDATE_ROUTER;
                case 8:
                    return CREATE_UPDATE_GATEWAY;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<OperationType>
        internalGetValueMap() {
            return internalValueMap;
        }

        private static final com.google.protobuf.Internal.EnumLiteMap<
                OperationType> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<OperationType>() {
                    public OperationType findValueByNumber(int number) {
                        return OperationType.forNumber(number);
                    }
                };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
            return getDescriptor().getValues().get(ordinal());
        }

        public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }

        public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
            return Common.getDescriptor().getEnumTypes().get(1);
        }

        private static final OperationType[] VALUES = values();

        public static OperationType valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            if (desc.getIndex() == -1) {
                return UNRECOGNIZED;
            }
            return VALUES[desc.getIndex()];
        }

        private final int value;

        private OperationType(int value) {
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:alcorcontroller.OperationType)
    }

    /**
     * Protobuf enum {@code alcorcontroller.OperationStatus}
     */
    public enum OperationStatus
            implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>SUCCESS = 0;</code>
         */
        SUCCESS(0),
        /**
         * <code>FAILURE = 1;</code>
         */
        FAILURE(1),
        /**
         * <code>INVALID_ARG = 2;</code>
         */
        INVALID_ARG(2),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>SUCCESS = 0;</code>
         */
        public static final int SUCCESS_VALUE = 0;
        /**
         * <code>FAILURE = 1;</code>
         */
        public static final int FAILURE_VALUE = 1;
        /**
         * <code>INVALID_ARG = 2;</code>
         */
        public static final int INVALID_ARG_VALUE = 2;


        public final int getNumber() {
            if (this == UNRECOGNIZED) {
                throw new IllegalArgumentException(
                        "Can't get the number of an unknown enum value.");
            }
            return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @Deprecated
        public static OperationStatus valueOf(int value) {
            return forNumber(value);
        }

        public static OperationStatus forNumber(int value) {
            switch (value) {
                case 0:
                    return SUCCESS;
                case 1:
                    return FAILURE;
                case 2:
                    return INVALID_ARG;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<OperationStatus>
        internalGetValueMap() {
            return internalValueMap;
        }

        private static final com.google.protobuf.Internal.EnumLiteMap<
                OperationStatus> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<OperationStatus>() {
                    public OperationStatus findValueByNumber(int number) {
                        return OperationStatus.forNumber(number);
                    }
                };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
            return getDescriptor().getValues().get(ordinal());
        }

        public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }

        public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
            return Common.getDescriptor().getEnumTypes().get(2);
        }

        private static final OperationStatus[] VALUES = values();

        public static OperationStatus valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            if (desc.getIndex() == -1) {
                return UNRECOGNIZED;
            }
            return VALUES[desc.getIndex()];
        }

        private final int value;

        private OperationStatus(int value) {
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:alcorcontroller.OperationStatus)
    }

    /**
     * Protobuf enum {@code alcorcontroller.EtherType}
     */
    public enum EtherType
            implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>IPV4 = 0;</code>
         */
        IPV4(0),
        /**
         * <code>IPV6 = 1;</code>
         */
        IPV6(1),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>IPV4 = 0;</code>
         */
        public static final int IPV4_VALUE = 0;
        /**
         * <code>IPV6 = 1;</code>
         */
        public static final int IPV6_VALUE = 1;


        public final int getNumber() {
            if (this == UNRECOGNIZED) {
                throw new IllegalArgumentException(
                        "Can't get the number of an unknown enum value.");
            }
            return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @Deprecated
        public static EtherType valueOf(int value) {
            return forNumber(value);
        }

        public static EtherType forNumber(int value) {
            switch (value) {
                case 0:
                    return IPV4;
                case 1:
                    return IPV6;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<EtherType>
        internalGetValueMap() {
            return internalValueMap;
        }

        private static final com.google.protobuf.Internal.EnumLiteMap<
                EtherType> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<EtherType>() {
                    public EtherType findValueByNumber(int number) {
                        return EtherType.forNumber(number);
                    }
                };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
            return getDescriptor().getValues().get(ordinal());
        }

        public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }

        public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
            return Common.getDescriptor().getEnumTypes().get(3);
        }

        private static final EtherType[] VALUES = values();

        public static EtherType valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            if (desc.getIndex() == -1) {
                return UNRECOGNIZED;
            }
            return VALUES[desc.getIndex()];
        }

        private final int value;

        private EtherType(int value) {
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:alcorcontroller.EtherType)
    }

    /**
     * Protobuf enum {@code alcorcontroller.Protocol}
     */
    public enum Protocol
            implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>TCP = 0;</code>
         */
        TCP(0),
        /**
         * <code>UDP = 1;</code>
         */
        UDP(1),
        /**
         * <code>ICMP = 2;</code>
         */
        ICMP(2),
        /**
         * <code>HTTP = 3;</code>
         */
        HTTP(3),
        /**
         * <code>ARP = 4;</code>
         */
        ARP(4),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>TCP = 0;</code>
         */
        public static final int TCP_VALUE = 0;
        /**
         * <code>UDP = 1;</code>
         */
        public static final int UDP_VALUE = 1;
        /**
         * <code>ICMP = 2;</code>
         */
        public static final int ICMP_VALUE = 2;
        /**
         * <code>HTTP = 3;</code>
         */
        public static final int HTTP_VALUE = 3;
        /**
         * <code>ARP = 4;</code>
         */
        public static final int ARP_VALUE = 4;


        public final int getNumber() {
            if (this == UNRECOGNIZED) {
                throw new IllegalArgumentException(
                        "Can't get the number of an unknown enum value.");
            }
            return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @Deprecated
        public static Protocol valueOf(int value) {
            return forNumber(value);
        }

        public static Protocol forNumber(int value) {
            switch (value) {
                case 0:
                    return TCP;
                case 1:
                    return UDP;
                case 2:
                    return ICMP;
                case 3:
                    return HTTP;
                case 4:
                    return ARP;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<Protocol>
        internalGetValueMap() {
            return internalValueMap;
        }

        private static final com.google.protobuf.Internal.EnumLiteMap<
                Protocol> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<Protocol>() {
                    public Protocol findValueByNumber(int number) {
                        return Protocol.forNumber(number);
                    }
                };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
            return getDescriptor().getValues().get(ordinal());
        }

        public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }

        public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
            return Common.getDescriptor().getEnumTypes().get(4);
        }

        private static final Protocol[] VALUES = values();

        public static Protocol valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            if (desc.getIndex() == -1) {
                return UNRECOGNIZED;
            }
            return VALUES[desc.getIndex()];
        }

        private final int value;

        private Protocol(int value) {
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:alcorcontroller.Protocol)
    }


    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }

    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;

    static {
        String[] descriptorData = {
                "\n\014common.proto\022\017alcorcontroller*@\n\014Resou" +
                        "rceType\022\007\n\003VPC\020\000\022\n\n\006SUBNET\020\001\022\010\n\004PORT\020\002\022\021" +
                        "\n\rSECURITYGROUP\020\003*\243\001\n\rOperationType\022\n\n\006C" +
                        "REATE\020\000\022\n\n\006UPDATE\020\001\022\007\n\003GET\020\002\022\n\n\006DELETE\020\003" +
                        "\022\010\n\004INFO\020\004\022\014\n\010FINALIZE\020\005\022\030\n\024CREATE_UPDAT" +
                        "E_SWITCH\020\006\022\030\n\024CREATE_UPDATE_ROUTER\020\007\022\031\n\025" +
                        "CREATE_UPDATE_GATEWAY\020\010*<\n\017OperationStat" +
                        "us\022\013\n\007SUCCESS\020\000\022\013\n\007FAILURE\020\001\022\017\n\013INVALID_" +
                        "ARG\020\002*\037\n\tEtherType\022\010\n\004IPV4\020\000\022\010\n\004IPV6\020\001*9" +
                        "\n\010Protocol\022\007\n\003TCP\020\000\022\007\n\003UDP\020\001\022\010\n\004ICMP\020\002\022\010",
                "\n\004HTTP\020\003\022\007\n\003ARP\020\004B/\n%com.futurewei.alcor" +
                        ".controller.schemaB\006Commonb\006proto3"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root) {
                        descriptor = root;
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[]{
                        }, assigner);
    }

    // @@protoc_insertion_point(outer_class_scope)
}
