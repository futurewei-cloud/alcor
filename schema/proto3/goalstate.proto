/*
MIT License
Copyright(c) 2020 Futurewei Cloud

    Permission is hereby granted,
    free of charge, to any person obtaining a copy of this software and associated documentation files(the "Software"), to deal in the Software without restriction,
    including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and / or sell copies of the Software, and to permit persons
    to whom the Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
    
    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

syntax = "proto3";

package alcor.schema;

option java_package = "com.futurewei.alcor.schema";

import "common.proto";
import "vpc.proto";
import "subnet.proto";
import "port.proto";
import "neighbor.proto";
import "securitygroup.proto";
import "dhcp.proto";
import "router.proto";
import "gateway.proto";

message GoalState {
    uint32 format_version = 1;

    repeated VpcState vpc_states = 2;
    repeated SubnetState subnet_states = 3;
    repeated PortState port_states = 4;
    repeated NeighborState neighbor_states = 5;
    repeated SecurityGroupState security_group_states = 6;
    repeated DHCPState dhcp_states = 7;
    repeated RouterState router_states = 8;
    repeated GatewayState gateway_states = 9;
}

message ResourceIdType{
    ResourceType type = 1;
    string id = 2;
}

message HostResources{
    repeated ResourceIdType resources = 1;
}

message GoalStateV2 {
    uint32 format_version = 1;

    map<string /*host ip*/, HostResources /*list of resources deployed to a target host*/> host_resources = 2;
    map<string /*resource id*/, VpcState> vpc_states = 3;
    map<string /*resource id*/, SubnetState> subnet_states = 4;

    // PortState and DHCPState is applicable to one host only
    map<string /*resource id*/, PortState> port_states = 5;
    map<string /*resource id*/, DHCPState> dhcp_states = 6;

    map<string /*resource id*/, NeighborState> neighbor_states = 7;
    map<string /*resource id*/, SecurityGroupState> security_group_states = 8;
    map<string /*resource id*/, RouterState> router_states = 9;
    map<string /*resource id*/, GatewayState> gateway_states = 10;
}